{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"React\"","webpack:///./src/components/controls/input.tsx","webpack:///external \"ReactDOM\"","webpack:///./src/components/controls/select.tsx","webpack:///./src/utils/conduitEvent.ts","webpack:///./src/utils/selectHelper.ts","webpack:///./src/http/httpClient.ts","webpack:///external \"Discord\"","webpack:///./src/utils/clientHelper.ts","webpack:///./src/utils/logger.ts","webpack:///./src/components/controls/avatar/avatar.tsx","webpack:///./src/components/dashboard/dashboardPanel.tsx","webpack:///./src/components/controls/checkbox.tsx","webpack:///./src/index.tsx","webpack:///./src/components/login.tsx","webpack:///./src/components/loader.tsx","webpack:///./node_modules/notyf/notyf.es.js","webpack:///./src/utils/loader.ts","webpack:///./src/components/dashboard/dashboard.tsx","webpack:///./src/components/dashboard/header/dashboardHeader.tsx","webpack:///./src/components/dashboard/header/dashboardHeaderInfo.tsx","webpack:///./src/components/controls/avatar/botAvatar.tsx","webpack:///./src/components/dashboard/dashboardConsole.tsx","webpack:///./src/components/dashboard/guild/dashboardGuilds.tsx","webpack:///./src/components/controls/avatar/guildAvatar.tsx","webpack:///./src/utils/actionReporter.ts","webpack:///./src/components/dashboard/guild/dashboardEmojis.tsx","webpack:///./src/components/controls/emojiSelector.tsx","webpack:///./src/components/dashboard/guild/dashboardChannels.tsx","webpack:///./src/components/dashboard/channel/dashboardCategoryChannel.tsx","webpack:///./src/components/dashboard/channel/dashboardTextChannel.tsx","webpack:///./src/components/dashboard/channel/dashboardVoiceChannel.tsx","webpack:///./src/components/dashboard/guild/dashboardRoles.tsx","webpack:///./src/components/controls/colorPicker.tsx","webpack:///./src/http/restClient.ts","webpack:///./src/components/header.tsx","webpack:///./node_modules/events/events.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","React","Input","Component","props","super","style","this","resize","e","target","border","onChange","currentTarget","which","onValidated","multiline","onTextAreaChange","className","id","onKeyPress","placeholder","onInputChange","type","list","ReactDOM","Select","addedHandler","document","addEventListener","closeSelect","getElementsByClassName","onSelected","item","selectItems","selectSelectedItems","indexes","length","push","classList","remove","indexOf","add","parent","getElementById","select","a","createElement","setAttribute","options","selectedIndex","textContent","appendChild","b","opt","optRow","_","sibling","parentNode","previousSibling","j","selecteds","k","removeAttribute","click","text","stopPropagation","nextSibling","toggle","defaultValue","SelectHelper","trySetValue","postRender","removeChild","items","children","handlers","handler","filter","h","data","slice","forEach","SelectResult","element","success","selectId","child","div","resSelect","tryGetSelect","toNode","opts","firstChild","addHandler","tryGetOption","tryChangeOptionText","resOpt","resItem","tryGetItem","newOpt","newText","HttpResult","req","status","content","response","headers","getResponseHeaders","lines","getAllResponseHeaders","split","x","line","pos","substring","trim","JSON","parse","method","url","body","Promise","resolve","reject","XMLHttpRequest","timeout","onreadystatechange","readyState","open","setRequestHeader","send","err","httpRequest","Discord","client","wsObject","wsHandle","setInterval","connection","ws","clearInterval","setTimeout","obj","waitGatewayWS","LogType","LogEventArgs","msg","message","notifications","Notyf","duration","ripple","onLog","ConduitEvent","console","log","warn","trigger","NORMAL","error","DANGER","expose","Avatar","fileType","base64","debug","getElementsByTagName","fileReader","FileReader","file","files","onload","arrayBuffer","result","array","Uint8Array","btoa","String","fromCharCode","apply","readAsArrayBuffer","avatar","parentElement","img","alt","display","onError","onClick","accept","DashboardPanel","folded","title","onFoldClick","foldable","Checkbox","checked","defaultChecked","Client","logger","Logger","loader","Loader","EventEmitter","defaultMaxListeners","messageCacheMaxSize","messageCacheLifetime","large_threshold","fetchAllMembers","shardCount","render","Header","Login","Dashboard","clientHelper","ClientHelper","wss","getAllGatewayWS","readyCallback","ev","guilds","removeEventListener","emit","input","form","disabled","load","login","catch","createReadyPromise","then","succ","user","bot","tag","destroy","preventDefault","connect","onTokenChange","onConnect","NotyfArrayEvent","__assign","assign","arguments","NotyfNotification","NotyfArray","elem","updateFn","Add","splice","index","num","Remove","onupdate","fn","DEFAULT_OPTIONS","types","backgroundColor","icon","tagName","NotyfView","docFrag","createDocumentFragment","notyfContainer","_createHTLMElement","container","animationEndEventName","_getAnimationEndEventName","_createA11yContainer","update","notification","addNotification","removeNotification","node","handleEvent","_this","renderedNotification","_popRenderedNotification","event","_renderNotification","_announce","card","_buildNotificationCard","idx","iconOpts","notificationElem","wrapper","innerHTML","color","iconContainer","_a","a11yContainer","clip","height","margin","overflow","padding","position","width","outline","el","transitions","MozTransition","OTransition","WebkitTransition","transition","undefined","view","registerTypes","payload","normalizeOptions","defaultOpts","find","config","_pushNotification","incomingTypes","map","defaultType","userTypeIdx","findIndex","userType","concat","promiseAmount","promise","res","on","onLoggedIn","onReady","count","getPanelTitle","guildCount","guildCallback","Math","ceil","getGatewayWS","shard","fetchClientValues","reduce","size","DashboardHeader","paddingBottom","DashboardGuilds","bottom","DashboardConsole","DashboardHeaderInfo","initialize","onUserUpdate","onGuildX","game","shards","users","botId","username","innerText","toString","presence","newUser","setUsername","activity","actNumber","activityNameToNum","setActivity","toLowerCase","gamePresence","act","activityNumToName","actNum","actName","setPresence","statusNameToDisplay","dashboard","location","reload","window","BotAvatar","onBotNameValidated","onBotGameValidated","onBotPresenceChanged","onBotStatusChanged","marginTop","onInviteClick","onBotClose","httpClient","HttpClient","avatarURL","join","src","updateAvatar","stringify","patch","token","isSuccess","asObject","DiscordEventType","enabledEvents","Channel","Guild","Emoji","Role","Global","Conduit","regex","chan","logMessage","emoji","guild","settings","guildID","guildId","member","role","WARN","rateLimit","path","logEventArgs","eventType","logType","test","timestamp","Date","toLocaleTimeString","time","append","terminal","scrollTo","scrollHeight","checkboxeIds","checkbox","state","pattern","RegExp","onClear","setEvent","onRegexChange","marginBottom","selectedGuild","reporter","ActionReporter","restClient","RestClient","loadRegionSelect","onGuildCreate","onGuildCached","onGuildDelete","g","onGuildUpdate","fetchVoiceRegions","regions","region","onGuildRegionChange","addGuildsToDatalist","updateGuildInfo","broadcastEval","gs","guildName","datalist","childNodes","getGuildOptionNode","first","has","available","fetchGuild","set","updateSubPanels","guildAvatar","guildChannelContainer","guildEmojisContainer","guildRolesContainer","GuildAvatar","DashboardChannels","onLayoutInvalidated","DashboardEmojis","DashboardRoles","guildSelect","tryFindGuild","deleted","perms","botMember","perm","hasPermission","hasPermissions","oldName","setName","reportGuildAction","guildRegion","oldRegion","setRegion","leave","delete","onGuildSelected","onGuildNameChange","onLeaveGuild","onDeleteGuild","iconURL","members","ownerID","fetchMember","userId","fetchUser","embed","systemChannel","permissionsFor","getGuildOwner","owner","notifyGuild","createDM","dmChannel","addField","createEmbed","fields","getUser","action","addDescription","RichEmbed","setTitle","setColor","setDescription","notifyGuildOwner","notifyUser","selectedEmoji","isCurrentEmojiValid","deletable","deleteEmoji","EmojiSelector","onEmojiSelectedUpdate","onEmojiChange","onEmojiNameChange","onEmojiDelete","onEmojiCreate","onEmojiUpdate","isValidEmoji","findEmojiImage","selector","onclick","hideSelected","oldImg","isVisible","emojiId","emojis","selectedFirst","renderEmojis","onChannelCreate","onChannelDelete","onChannelUpdate","isValidChannel","channels","guildChan","chanId","getChannelOptionNode","jsx","catChan","DashboardCategoryChannel","channel","txtChan","DashboardTextChannel","voiceChan","DashboardVoiceChannel","loadChannel","chans","onChannelSelected","renderChannels","onChannelDeletion","category","registeredEvents","updateChannels","containerAdd","containerRemove","childrenChannels","getChannels","nonChildrenChannels","chanToAdd","chanToRemove","chanIdToAdd","onChannelNotChildrenSelected","onChannelNonChildrenAdded","chanIdToRemove","onChannelChildrenSelected","onChannelChildrenRemoved","inCat","parentID","formatChannel","isCurrentChannelValid","manageable","deleteChildren","setParent","onChannelNameChanged","onChannelDeleted","onChannelChildrenDeleted","cat","tryAddValue","onParentSelected","tryRemoveValue","setTopic","topic","matches","match","limit","Number","oldLimit","rateLimitPerUser","setRateLimitPerUser","memberPermissions","fileInput","FormData","tts","post","oldNsfw","nsfw","setNSFW","oldParent","report","nameInput","topicInput","rtInput","nsfwInput","chanContainer","categories","onChannelTopicChanged","onChannelRateLimitChanged","onChannelNsfwChanged","onChannelMessageSent","voiceClient","userLimit","setUserLimit","oldLimitDisplay","newLimitDisplay","bitrate","oldBitrate","setBitrate","userLimitInput","bitrateInput","onChannelUserLimitChanged","onChannelBitrateChanged","selectedRole","roleId","roleContainer","roles","ColorPicker","validateChange","valideColorChange","failedChange","onColorChangeFail","loadRole","hexColor","onRoleSelected","renderRoles","picker","Cache","objects","Collection","RestCache","guildChannels","cache","TextChannel","VoiceChannel","CategoryChannel","defaultFetchAPI","dataArray","createGuildChannel","isCached","fetchGuildChannels","me","fetchGuildChannel","ReflectOwnKeys","R","Reflect","ReflectApply","receiver","args","Function","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","NumberIsNaN","isNaN","init","_events","_eventsCount","_maxListeners","$getMaxListeners","that","_addListener","listener","prepend","events","existing","warning","TypeError","newListener","unshift","warned","w","Error","emitter","onceWrapper","fired","removeListener","wrapFn","_onceWrap","wrapped","_listeners","unwrap","evlistener","arr","ret","Array","unwrapListeners","arrayClone","listenerCount","copy","arg","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","er","context","len","listeners","addListener","prependListener","once","prependOnceListener","originalListener","shift","pop","spliceOne","off","removeAllListeners","keys","rawListeners","eventNames"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n","module.exports = React;","import * as React from 'react';\r\n\r\nexport interface InputProps {\r\n\tplaceholder: string;\r\n\tid: string;\r\n\tonValidated?: () => void;\r\n\tonChange?: (value: string) => void;\r\n\tmultiline?: boolean;\r\n\tlist?: string;\r\n\tvalue?: string;\r\n\tstyle?: React.CSSProperties;\r\n}\r\n\r\nexport class Input extends React.Component<InputProps, {}> {\r\n\tprivate style: React.CSSProperties;\r\n\r\n\tconstructor (props: InputProps) {\r\n\t\tsuper(props);\r\n\r\n\t\tif (!props.style) {\r\n\t\t\tthis.style = { resize: 'none' };\r\n\t\t} else {\r\n\t\t\tthis.style = props.style;\r\n\t\t\tthis.style.resize = 'none';\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onInputChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n\t\tif (!e.target.value) {\r\n\t\t\te.target.style.border = null;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onTextAreaChange(e: React.ChangeEvent<HTMLTextAreaElement>): void {\r\n\t\tif (!e.target.value) {\r\n\t\t\te.target.style.border = null;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onKeyPress(e: React.KeyboardEvent<HTMLInputElement>): void {\r\n\t\tif (this.props.onChange) {\r\n\t\t\tthis.props.onChange(e.currentTarget.value);\r\n\t\t}\r\n\r\n\t\tif (e.which === 13 && this.props.onValidated) {\r\n\t\t\tthis.props.onValidated();\r\n\t\t}\r\n\t}\r\n\r\n\trender(): JSX.Element {\r\n\t\tif (this.props.multiline) {\r\n\t\t\treturn <textarea onChange={this.onTextAreaChange}\r\n\t\t\t\tclassName='bot-edit-input'\r\n\t\t\t\tid={this.props.id}\r\n\t\t\t\tonKeyPress={this.onKeyPress.bind(this)}\r\n\t\t\t\tplaceholder={this.props.placeholder}\r\n\t\t\t\tvalue={this.props.value}\r\n\t\t\t\tstyle={this.style} />;\r\n\t\t} else {\r\n\t\t\treturn <input onChange={this.onInputChange}\r\n\t\t\t\tclassName='bot-edit-input'\r\n\t\t\t\tid={this.props.id}\r\n\t\t\t\ttype='text'\r\n\t\t\t\tonKeyPress={this.onKeyPress.bind(this)}\r\n\t\t\t\tplaceholder={this.props.placeholder}\r\n\t\t\t\tlist={this.props.list}\r\n\t\t\t\tvalue={this.props.value}\r\n\t\t\t\tstyle={this.style} />;\r\n\t\t}\r\n\t}\r\n}","module.exports = ReactDOM;","import * as React from 'react';\r\n\r\nimport { SelectHelper } from '../../utils/selectHelper';\r\n\r\nexport interface SelectProps {\r\n\tid: string;\r\n\tdefaultValue?: string;\r\n\tonSelected: (value: string) => void;\r\n}\r\n\r\nexport class Select extends React.Component<SelectProps, {}> {\r\n\tprivate static addedHandler: boolean = false;\r\n\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\r\n\t\tif (!Select.addedHandler) {\r\n\t\t\tdocument.addEventListener('click', () => this.closeSelect(null, document.getElementsByClassName('select-items'), document.getElementsByClassName('select-selected')));\r\n\t\t\tSelect.addedHandler = true;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onSelected(value: string): void {\r\n\t\tthis.props.onSelected(value);\r\n\t}\r\n\r\n\tprivate closeSelect(item: Element, selectItems: HTMLCollectionOf<Element>, selectSelectedItems: HTMLCollectionOf<Element>): void {\r\n\t\tlet indexes: Array<number> = [];\r\n\t\tfor (let i: number = 0; i < selectSelectedItems.length; i++) {\r\n\t\t\tif (item == selectSelectedItems[i]) {\r\n\t\t\t\tindexes.push(i);\r\n\t\t\t} else {\r\n\t\t\t\tselectSelectedItems[i].classList.remove('select-arrow-active');\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let i: number = 0; i < selectItems.length; i++) {\r\n\t\t\tif (indexes.indexOf(i)) {\r\n\t\t\t\tselectItems[i].classList.add('select-hide');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpostRender(): void {\r\n\t\tlet parent: HTMLDivElement = document.getElementById(`parent-${this.props.id}`) as HTMLDivElement;\r\n\t\tlet select: HTMLSelectElement = document.getElementById(this.props.id) as HTMLSelectElement;\r\n\r\n\t\tlet a: HTMLDivElement = document.createElement('div');\r\n\t\ta.setAttribute('class', 'select-selected');\r\n\t\tif (select.options.selectedIndex !== -1) {\r\n\t\t\ta.textContent = select.options[select.selectedIndex].textContent;\r\n\t\t}\r\n\r\n\t\tparent.appendChild(a);\r\n\r\n\t\tlet b: HTMLDivElement = document.createElement('div');\r\n\t\tb.setAttribute('class', 'select-items select-hide');\r\n\r\n\t\tfor (let i: number = 0; i < select.options.length; i++) {\r\n\t\t\tlet opt: HTMLOptionElement = select.options[i];\r\n\t\t\tlet optRow: HTMLDivElement = document.createElement('div');\r\n\t\t\toptRow.textContent = opt.textContent;\r\n\t\t\toptRow.addEventListener('click', (_: MouseEvent) => {\r\n\t\t\t\tlet sibling: HTMLElement = optRow.parentNode.previousSibling as HTMLElement;\r\n\t\t\t\tfor (let j: number = 0; j < select.length; j += 1) {\r\n\t\t\t\t\tif (opt.textContent == optRow.textContent) {\r\n\t\t\t\t\t\tselect.selectedIndex = j;\r\n\t\t\t\t\t\tsibling.textContent = optRow.textContent;\r\n\t\t\t\t\t\tlet selecteds: HTMLCollectionOf<Element> = (optRow.parentNode as HTMLElement).getElementsByClassName('same-as-selected');\r\n\t\t\t\t\t\tfor (let k: number = 0; k < selecteds.length; k++) {\r\n\t\t\t\t\t\t\tselecteds[k].removeAttribute('class');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\toptRow.setAttribute('class', 'same-as-selected');\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tsibling.click();\r\n\r\n\t\t\t\t// fix for events\r\n\t\t\t\tselect.value = opt.value;\r\n\t\t\t\toptRow.textContent = opt.text;\r\n\t\t\t\tthis.onSelected(opt.value);\r\n\t\t\t});\r\n\t\t\tb.appendChild(optRow);\r\n\t\t}\r\n\r\n\t\tparent.appendChild(b);\r\n\t\ta.addEventListener('click', (e: MouseEvent) => {\r\n\t\t\te.stopPropagation();\r\n\t\t\tthis.closeSelect(a, document.getElementsByClassName('select-items'), document.getElementsByClassName('select-selected'));\r\n\t\t\t(a.nextSibling as HTMLElement).classList.toggle('select-hide');\r\n\t\t});\r\n\r\n\t\tif (this.props.defaultValue) {\r\n\t\t\tSelectHelper.trySetValue(this.props.id, this.props.defaultValue);\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(): void {\r\n\t\tthis.postRender();\r\n\t}\r\n\r\n\tcomponentDidUpdate(): void {\r\n\t\tlet parent: HTMLDivElement = document.getElementById(`parent-${this.props.id}`) as HTMLDivElement;\r\n\r\n\t\tlet selecteds: HTMLCollectionOf<Element> = parent.getElementsByClassName('select-selected');\r\n\t\tfor (let e of selecteds) {\r\n\t\t\tparent.removeChild(e);\r\n\t\t}\r\n\r\n\t\tlet items: HTMLCollectionOf<Element> = parent.getElementsByClassName('select-items');\r\n\t\tfor (let e of items) {\r\n\t\t\tparent.removeChild(e);\r\n\t\t}\r\n\r\n\t\tthis.postRender();\r\n\t}\r\n\r\n\trender(): JSX.Element {\r\n\t\treturn <div className='conduit-select' id={`parent-${this.props.id}`}>\r\n\t\t\t<select id={this.props.id} defaultValue={this.props.defaultValue}>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</select>\r\n\t\t</div>\r\n\t}\r\n}","export interface IConduitEvent<T> {\r\n\ton(handler: { (data?: T): void }) : void;\r\n\toff(handler: { (data?: T): void }) : void;\r\n}\r\n\r\nexport class ConduitEvent<T> implements IConduitEvent<T> {\r\n\tprivate handlers: { (data?: T): void; }[] = [];\r\n\r\n\tpublic on(handler: { (data?: T): void }) : void {\r\n\t\tthis.handlers.push(handler);\r\n\t}\r\n\r\n\tpublic off(handler: { (data?: T): void }) : void {\r\n\t\tthis.handlers = this.handlers.filter(h => h !== handler);\r\n\t}\r\n\r\n\tpublic trigger(data?: T) {\r\n\t\tthis.handlers.slice(0).forEach(h => h(data));\r\n\t}\r\n\r\n\tpublic expose() : IConduitEvent<T> {\r\n\t\treturn this;\r\n\t}\r\n}","class SelectResult<T extends HTMLElement> {\r\n\tpublic success: boolean;\r\n\tpublic element: T;\r\n\r\n\tconstructor (element: T) {\r\n\t\tthis.element = element;\r\n\t\tthis.success = element ? true : false;\r\n\t}\r\n\r\n\tpublic toNode(): T {\r\n\t\treturn this.element;\r\n\t}\r\n}\r\n\r\nexport class SelectHelper {\r\n\tprivate static tryGetSelect(selectId: string): SelectResult<HTMLSelectElement> {\r\n\t\tlet select: HTMLSelectElement = document.getElementById(selectId) as HTMLSelectElement;\r\n\t\treturn new SelectResult(select);\r\n\t}\r\n\r\n\tprivate static tryGetOption(select: HTMLSelectElement, value: string): SelectResult<HTMLOptionElement> {\r\n\t\ttry {\r\n\t\t\tfor (let opt of select.options) {\r\n\t\t\t\tif (opt.value === value) {\r\n\t\t\t\t\treturn new SelectResult(opt);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn new SelectResult(null);\r\n\t\t} catch {\r\n\t\t\treturn new SelectResult(null);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static tryGetItem(select: HTMLSelectElement, opt: HTMLOptionElement): SelectResult<HTMLDivElement> {\r\n\t\ttry {\r\n\t\t\tlet items: HTMLDivElement = select.nextSibling.nextSibling as HTMLDivElement;\r\n\t\t\tfor (let child of items.children) {\r\n\t\t\t\tif (child.textContent === opt.textContent) {\r\n\t\t\t\t\treturn new SelectResult(child as HTMLDivElement);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn new SelectResult(null);\r\n\t\t} catch {\r\n\t\t\treturn new SelectResult(null);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static addHandler(select: HTMLSelectElement, opt: HTMLOptionElement, div: HTMLDivElement, onSelected: (value: string) => void) {\r\n\t\tdiv.addEventListener('click', (_: MouseEvent) => {\r\n\t\t\tlet sibling: HTMLElement = div.parentNode.previousSibling as HTMLElement;\r\n\t\t\tfor (let i: number = 0; i < select.length; i += 1) {\r\n\t\t\t\tif (opt.textContent == div.textContent) {\r\n\t\t\t\t\tselect.selectedIndex = i;\r\n\t\t\t\t\tsibling.textContent = div.textContent;\r\n\t\t\t\t\tlet selecteds: HTMLCollectionOf<Element> = (div.parentNode as HTMLElement).getElementsByClassName('same-as-selected');\r\n\t\t\t\t\tfor (let k: number = 0; k < selecteds.length; k++) {\r\n\t\t\t\t\t\tselecteds[k].removeAttribute('class');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdiv.setAttribute('class', 'same-as-selected');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tsibling.click();\r\n\r\n\t\t\t// fix for events\r\n\t\t\tselect.value = opt.value;\r\n\t\t\tdiv.textContent = opt.text;\r\n\t\t\tonSelected(opt.value);\r\n\t\t});\r\n\t}\r\n\r\n\tpublic static trySetValue(selectId: string, value: string): boolean {\r\n\t\tlet resSelect: SelectResult<HTMLSelectElement> = SelectHelper.tryGetSelect(selectId);\r\n\t\tif (!resSelect.success) return false;\r\n\r\n\t\tlet select: HTMLSelectElement = resSelect.toNode();\r\n\t\tselect.value = value;\r\n\r\n\t\tlet selectedIndex: number = select.selectedIndex > -1 ? select.selectedIndex : 0;\r\n\t\tselect.nextSibling.textContent = select.options[selectedIndex].textContent;\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic static trySetOptions(selectId: string, opts: Array<HTMLOptionElement>, onSelected: (value: string) => void): boolean {\r\n\t\tlet resSelect: SelectResult<HTMLSelectElement> = SelectHelper.tryGetSelect(selectId);\r\n\t\tif (!resSelect.success) return false;\r\n\r\n\t\tlet select: HTMLSelectElement = resSelect.toNode();\r\n\t\twhile (select.firstChild) {\r\n\t\t\tselect.removeChild(select.firstChild);\r\n\t\t}\r\n\r\n\t\tlet items: HTMLDivElement = select.nextSibling.nextSibling as HTMLDivElement;\r\n\t\twhile (items.firstChild) {\r\n\t\t\titems.removeChild(items.firstChild);\r\n\t\t}\r\n\r\n\t\tif (opts.length <= 0) return true;\r\n\r\n\t\tfor (let opt of opts) {\r\n\t\t\tselect.appendChild(opt);\r\n\t\t\tlet div: HTMLDivElement = document.createElement('div');\r\n\t\t\tdiv.textContent = opt.textContent;\r\n\t\t\titems.appendChild(div);\r\n\t\t\tSelectHelper.addHandler(select, opt, div, onSelected);\r\n\t\t}\r\n\r\n\t\tselect.value = opts[0].value;\r\n\t\tselect.nextSibling.textContent = opts[0].textContent;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic static tryAddValue(selectId: string, value: string, text: string, onSelected: (value: string) => void): boolean {\r\n\t\tlet resSelect: SelectResult<HTMLSelectElement> = SelectHelper.tryGetSelect(selectId);\r\n\t\tif (!resSelect.success) return false;\r\n\t\tlet resOpt: SelectResult<HTMLOptionElement> = SelectHelper.tryGetOption(resSelect.element, value);\r\n\t\tif (resOpt.success) { // in case value already exists\r\n\t\t\treturn SelectHelper.tryChangeOptionText(selectId, value, text);\r\n\t\t}\r\n\r\n\t\tlet select: HTMLSelectElement = resSelect.toNode();\r\n\t\tlet opt: HTMLOptionElement = document.createElement('option');\r\n\t\topt.value = value;\r\n\t\topt.textContent = text;\r\n\t\tselect.appendChild(opt);\r\n\r\n\t\tlet div: HTMLDivElement = document.createElement('div');\r\n\t\tdiv.textContent = text;\r\n\t\tlet items: HTMLDivElement = select.nextSibling.nextSibling as HTMLDivElement;\r\n\t\titems.appendChild(div);\r\n\t\tSelectHelper.addHandler(select, opt, div, onSelected);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic static tryRemoveValue(selectId: string, value: string): boolean {\r\n\t\tlet resSelect: SelectResult<HTMLSelectElement> = SelectHelper.tryGetSelect(selectId);\r\n\t\tif (!resSelect.success) return false;\r\n\t\tlet resOpt: SelectResult<HTMLOptionElement> = SelectHelper.tryGetOption(resSelect.element, value);\r\n\t\tif (!resOpt.success) return false;\r\n\t\tlet resItem: SelectResult<HTMLDivElement> = SelectHelper.tryGetItem(resSelect.element, resOpt.element);\r\n\t\tif (!resItem.success) return false;\r\n\r\n\t\tlet select: HTMLSelectElement = resSelect.toNode();\r\n\t\tlet opt: HTMLOptionElement = resOpt.toNode();\r\n\r\n\t\tlet items: ChildNode = select.nextSibling.nextSibling;\r\n\t\tlet item: HTMLDivElement = resItem.toNode();\r\n\r\n\t\tselect.removeChild(opt);\r\n\t\titems.removeChild(item);\r\n\r\n\t\t// in case we're removing the selected element\r\n\t\tif (opt.textContent === select.nextSibling.textContent) {\r\n\t\t\tselect.selectedIndex = 0;\r\n\t\t\tlet newOpt: HTMLOptionElement = select.options[select.selectedIndex];\r\n\t\t\tif (!newOpt) {\r\n\t\t\t\tselect.value = '';\r\n\t\t\t\tselect.nextSibling.textContent = '';\r\n\t\t\t} else {\r\n\t\t\t\tselect.value = newOpt.value;\r\n\t\t\t\tselect.nextSibling.textContent = newOpt.textContent;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic static tryChangeOptionText(selectId: string, value: string, newText: string): boolean {\r\n\t\tlet resSelect: SelectResult<HTMLSelectElement> = SelectHelper.tryGetSelect(selectId);\r\n\t\tif (!resSelect.success) return false;\r\n\t\tlet resOpt: SelectResult<HTMLOptionElement> = SelectHelper.tryGetOption(resSelect.element, value);\r\n\t\tif (!resOpt.success) return false;\r\n\t\tlet resItem: SelectResult<HTMLDivElement> = SelectHelper.tryGetItem(resSelect.element, resOpt.element);\r\n\t\tif (!resItem.success) return false;\r\n\r\n\t\tlet select: HTMLSelectElement = resSelect.toNode();\r\n\t\tlet opt: HTMLOptionElement = resOpt.toNode();\r\n\t\tlet item: HTMLDivElement = resItem.toNode();\r\n\r\n\t\tif (select.nextSibling.textContent === opt.textContent) {\r\n\t\t\tselect.nextSibling.textContent = newText;\r\n\t\t}\r\n\r\n\t\titem.textContent = newText\r\n\t\topt.textContent = newText;\r\n\t}\r\n}","export class HttpResult {\r\n\tpublic status: number;\r\n\tpublic content: string;\r\n\tpublic headers: any;\r\n\r\n\tconstructor(req: XMLHttpRequest) {\r\n\t\tthis.status = req.status;\r\n\t\tthis.content = req.response;\r\n\t\tthis.headers = this.getResponseHeaders(req);\r\n\t}\r\n\r\n\tprivate getResponseHeaders(req: XMLHttpRequest): any {\r\n\t\tlet headers: any = {};\r\n\t\tlet lines: string[] = req.getAllResponseHeaders().split('\\r\\n').filter(x => x.length > 0);\r\n\t\tfor (let line of lines)\r\n\t\t{\r\n\t\t\tlet pos: number = line.indexOf(':');\r\n\t\t\tlet key: string = line.substring(0, pos + 1);\r\n\t\t\tlet value: string = line.substring(pos + 1, line.length).trim();\r\n\t\t\theaders[key] = value;\r\n\t\t}\r\n\r\n\t\treturn headers;\r\n\t}\r\n\r\n\tpublic asObject<T>(): T {\r\n\t\tif (!this.content) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn JSON.parse(this.content) as T;\r\n\t}\r\n\r\n\tpublic isSuccess(): boolean {\r\n\t\tif (!this.status) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn this.status === 200;\r\n\t}\r\n}\r\n\r\nexport class HttpClient {\r\n\tprivate httpRequest(method: string, url: string, body?: string | FormData, headers?: any): Promise<HttpResult> {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\ttry {\r\n\t\t\t\tlet req = new XMLHttpRequest();\r\n\t\t\t\treq.timeout = 5000;\r\n\t\t\t\treq.onreadystatechange = () => {\r\n\t\t\t\t\tif (req.readyState === 4) {\r\n\t\t\t\t\t\tresolve(new HttpResult(req));\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\treq.open(method, url);\r\n\r\n\t\t\t\tif (headers) {\r\n\t\t\t\t\tfor (let property in headers) {\r\n\t\t\t\t\t\treq.setRequestHeader(property, headers[property]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (body) {\r\n\t\t\t\t\treq.send(body);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treq.send(null);\r\n\t\t\t\t}\r\n\t\t\t} catch(err) {\r\n\t\t\t\treject(err);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic get(url: string, headers?: any): Promise<HttpResult> {\r\n\t\treturn this.httpRequest('GET', url, null, headers);\r\n\t}\r\n\r\n\tpublic patch(url: string, body: string | FormData, headers?: any): Promise<HttpResult> {\r\n\t\treturn this.httpRequest('PATCH', url, body, headers);\r\n\t}\r\n\r\n\tpublic put(url: string, body: string | FormData, headers?: any): Promise<HttpResult> {\r\n\t\treturn this.httpRequest('PUT', url, body, headers);\r\n\t}\r\n\r\n\tpublic delete(url: string, body: string | FormData, headers?: any): Promise<HttpResult> {\r\n\t\treturn this.httpRequest('DELETE', url, body, headers);\r\n\t}\r\n\r\n\tpublic post(url: string, body: string | FormData, headers?: any): Promise<HttpResult> {\r\n\t\treturn this.httpRequest('POST', url, body, headers);\r\n\t}\r\n}","module.exports = Discord;","import * as Discord from 'discord.js';\r\n\r\nexport class ClientHelper {\r\n\tprivate readonly timeout: number = 10000;\r\n\r\n\tprivate client: Discord.Client;\r\n\r\n\tconstructor (client: Discord.Client) {\r\n\t\tthis.client = client;\r\n\t}\r\n\r\n\tprivate waitGatewayWS(wsObject: any): Promise<WebSocket> {\r\n\t\treturn new Promise<WebSocket>((resolve, _) => {\r\n\t\t\tlet wsHandle: number = null;\r\n\t\t\tlet checkWs = () => {\r\n\t\t\t\tif (wsObject.connection && wsObject.connection.ws) {\r\n\t\t\t\t\tif (wsHandle) {\r\n\t\t\t\t\t\tclearInterval(wsHandle);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tresolve(wsObject.connection.ws);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\twsHandle = setInterval(checkWs, 250);\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tclearInterval(wsHandle);\r\n\t\t\t\tresolve(null);\r\n\t\t\t}, this.timeout)\r\n\t\t});\r\n\t}\r\n\r\n\tpublic async getGatewayWS(): Promise<WebSocket> {\r\n\t\tlet obj: any = this.client as any;\r\n\t\treturn await this.waitGatewayWS(obj.ws);\r\n\t}\r\n\r\n\t// This returns an array for a possible sharding implementation in the future\r\n\tpublic async getAllGatewayWS(): Promise<Array<WebSocket>> {\r\n\t\tlet obj: any = this.client as any;\r\n\t\tlet ws: WebSocket = await this.waitGatewayWS(obj.ws);\r\n\t\treturn ws ? [ ws ] : [];\r\n\t}\r\n}","import { Notyf } from 'notyf';\r\nimport { ConduitEvent, IConduitEvent } from './conduitEvent';\r\n\r\nexport enum LogType {\r\n\tNORMAL,\r\n\tWARN,\r\n\tDANGER,\r\n}\r\n\r\nexport class LogEventArgs {\r\n\tpublic message: string;\r\n\tpublic type: LogType;\r\n\r\n\tconstructor(msg: string, type: LogType) {\r\n\t\tthis.message = msg;\r\n\t\tthis.type = type;\r\n\t}\r\n}\r\n\r\nexport class Logger {\r\n\tprivate notifications: Notyf;\r\n\tprivate onLog: ConduitEvent<LogEventArgs>;\r\n\r\n\tconstructor() {\r\n\t\tthis.notifications = new Notyf({\r\n\t\t\tduration: 5000,\r\n\t\t\tripple: true,\r\n\t\t});\r\n\t\tthis.onLog = new ConduitEvent<LogEventArgs>();\r\n\t\tconsole.log('Welcome to conduit™');\r\n\t\tconsole.warn(`The following product is under licensed exclusive rights, any attempt of theft, distribution,\r\nand or but not only limited to service abuse will be issued with direct legal actions toward the individual or moral entity responsible of said actions.`);\r\n\t}\r\n\r\n\tpublic success(msg: string): void {\r\n\t\tthis.notifications.success(msg);\r\n\t\tconsole.log(msg);\r\n\t\tthis.onLog.trigger(new LogEventArgs(msg, LogType.NORMAL));\r\n\t}\r\n\r\n\tpublic error(msg: string): void {\r\n\t\tthis.notifications.error(msg);\r\n\t\tconsole.error(msg);\r\n\t\tthis.onLog.trigger(new LogEventArgs(msg, LogType.DANGER));\r\n\t}\r\n\r\n\tpublic get log(): IConduitEvent<LogEventArgs> {\r\n\t\treturn this.onLog.expose();\r\n\t}\r\n}","import * as React from 'react';\r\n\r\nimport { ConduitProps } from '../../../utils/conduitProps';\r\n\r\nexport interface AvatarProps extends ConduitProps {\r\n\tid: string;\r\n}\r\n\r\nexport class Avatar<T extends AvatarProps> extends React.Component<T, {}> {\r\n\tprotected onValidated(fileType: string, base64: string): void {\r\n\t\tconsole.debug(`onValidated was not overriden!`);\r\n\t}\r\n\r\n\tprivate onClick(_: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\r\n\t\tlet avatar: HTMLElement = document.getElementById(this.props.id);\r\n\t\tlet fileInput: HTMLInputElement = avatar.getElementsByTagName('input')[0];\r\n\t\tfileInput.click();\r\n\t}\r\n\r\n\tprivate onChange(e: React.ChangeEvent<HTMLInputElement>): void {\r\n\t\tlet fileReader: FileReader = new FileReader();\r\n\t\tlet file: File = e.target.files[0];\r\n\t\tfileReader.onload = () => {\r\n\t\t\tlet arrayBuffer: ArrayBuffer = fileReader.result as ArrayBuffer;\r\n\t\t\tlet array: Uint8Array = new Uint8Array(arrayBuffer);\r\n\t\t\tlet base64: string = btoa(String.fromCharCode.apply(null, array));\r\n\t\t\tthis.onValidated(file.type, base64);\r\n\t\t};\r\n\r\n\t\tfileReader.readAsArrayBuffer(file);\r\n\t}\r\n\r\n\tprivate onError(e: React.SyntheticEvent<HTMLImageElement, Event>): void {\r\n\t\tlet avatar: HTMLElement = e.currentTarget.parentElement;\r\n\t\tlet img: HTMLImageElement = avatar.getElementsByTagName('img')[0];\r\n\t\tlet alt: HTMLSpanElement = avatar.getElementsByTagName('span')[0];\r\n\r\n\t\timg.style.display = 'none';\r\n\t\talt.style.display = 'block';\r\n\t}\r\n\r\n\trender(): JSX.Element {\r\n\t\treturn <div id={this.props.id} className='avatar-control'>\r\n\t\t\t<span />\r\n\t\t\t<img alt='avatar' onError={this.onError.bind(this)} />\r\n\t\t\t<button onClick={this.onClick.bind(this)}>Change Avatar</button>\r\n\t\t\t<input onChange={this.onChange.bind(this)} type='file' accept='image/png,image/jpeg' />\r\n\t\t</div>\r\n\t}\r\n}","import * as React from 'react';\r\n\r\nexport interface DashboardPanelProps {\r\n\ttitle: string;\r\n\tfoldable?: boolean;\r\n\tstyle?: React.CSSProperties;\r\n\tid?: string;\r\n}\r\n\r\nexport class DashboardPanel extends React.Component<DashboardPanelProps, {}> {\r\n\tprivate folded: boolean;\r\n\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.folded = false;\r\n\t}\r\n\r\n\tprivate onFoldClick(e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\r\n\t\tlet panel: HTMLElement = e.currentTarget.parentElement.parentElement;\r\n\t\tlet content: HTMLDivElement = panel.getElementsByClassName('content')[0] as HTMLDivElement;\r\n\r\n\t\tif (!this.folded) {\r\n\t\t\tcontent.style.display = 'none';\r\n\t\t\te.currentTarget.textContent = '▼'\r\n\t\t\tthis.folded = true;\r\n\t\t} else {\r\n\t\t\tcontent.style.display = 'block';\r\n\t\t\te.currentTarget.textContent = '▲'\r\n\t\t\tthis.folded = false;\r\n\t\t}\r\n\t}\r\n\r\n\trender(): JSX.Element {\r\n\t\treturn <div id={this.props.id} className='dashboard-panel' style={this.props.style}>\r\n\t\t\t<div className='dashboard-header'>\r\n\t\t\t\t<span className='title'>{this.props.title}</span>\r\n\t\t\t\t<button className='fold-btn'\r\n\t\t\t\t\tonClick={this.onFoldClick.bind(this)}\r\n\t\t\t\t\tstyle={{ display: this.props.foldable ? 'block' : 'none' }}>\r\n\t\t\t\t\t▲\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<div className='content'>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</div>\r\n\t\t</div>;\r\n\t}\r\n}","import * as React from 'react';\r\n\r\nexport interface CheckboxProps {\r\n\tid: string;\r\n\tname: string;\r\n\tdefaultValue: boolean;\r\n\tonChange: (state: boolean) => void;\r\n}\r\n\r\nexport class Checkbox extends React.Component<CheckboxProps> {\r\n\tprivate onChange(e: React.ChangeEvent<HTMLInputElement>): void {\r\n\t\tthis.props.onChange(e.target.checked);\r\n\t}\r\n\r\n\trender(): JSX.Element {\r\n\t\treturn <div className='pretty p-switch p-fill'>\r\n\t\t\t<input id={this.props.id} type='checkbox' defaultChecked={this.props.defaultValue} onChange={this.onChange.bind(this)} />\r\n\t\t\t<div className='state p-success'>\r\n\t\t\t\t<label>{this.props.name}</label>\r\n\t\t\t</div>\r\n\t\t</div>;\r\n\t}\r\n}","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport * as Discord from 'discord.js';\r\n\r\nimport { Login } from './components/login';\r\nimport { Loader } from './components/loader';\r\nimport { Logger } from './utils/logger';\r\nimport { Loader as LoaderHelper } from './utils/loader';\r\nimport { Dashboard } from './components/dashboard/dashboard';\r\nimport { Header } from './components/header';\r\nimport { EventEmitter } from 'events';\r\n\r\nconst client: Discord.Client = new Discord.Client();\r\nconst logger: Logger = new Logger();\r\nconst loader: LoaderHelper = new LoaderHelper(logger);\r\n\r\nEventEmitter.defaultMaxListeners = 20;\r\nclient.options.messageCacheMaxSize = 1;\r\nclient.options.messageCacheLifetime = 1;\r\nclient.options.ws.large_threshold = 1;\r\nclient.options.fetchAllMembers = false;\r\nclient.options.shardCount = 1;\r\n\r\n// forgotten discord.js typings\r\ndeclare module 'discord.js' {\r\n\tinterface TextChannel {\r\n\t\trateLimitPerUser: number;\r\n\t\tsetNSFW(state: boolean, reason?: string): Promise<GuildChannel>;\r\n\t}\r\n\r\n\tinterface Guild {\r\n\t\tdeleted: boolean;\r\n\t}\r\n\r\n\tinterface Channel {\r\n\t\tdeleted: boolean;\r\n\t}\r\n\r\n\tinterface Emoji {\r\n\t\tdeleted: boolean;\r\n\t}\r\n\r\n\tinterface Role {\r\n\t\tdeleted: boolean;\r\n\t}\r\n}\r\n\r\nReactDOM.render(<div>\r\n\t<Header />\r\n\t<Login client={client} logger={logger} loader={loader} />\r\n\t<Dashboard client={client} logger={logger} loader={loader} />\r\n\t<Loader />\r\n</div>, document.getElementById('root'));","import * as React from 'react';\r\n\r\nimport { ConduitProps } from '../utils/conduitProps';\r\nimport { ClientHelper } from '../utils/clientHelper';\r\n\r\nexport class Login extends React.Component<ConduitProps, {}> {\r\n\tprivate clientHelper: ClientHelper;\r\n\r\n\tconstructor (props: ConduitProps) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.clientHelper = new ClientHelper(this.props.client);\r\n\t}\r\n\r\n\tprivate async createReadyPromise(): Promise<boolean> {\r\n\t\treturn new Promise<boolean>(async (resolve, _) => {\r\n\t\t\tsetTimeout(() => resolve(false), 30000); // 30s\r\n\r\n\t\t\tlet wss: Array<WebSocket> = await this.clientHelper.getAllGatewayWS();\r\n\t\t\tif (wss.length === 0) {\r\n\t\t\t\tresolve(false);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tlet i: number = 0;\r\n\t\t\tfor (let ws of wss) {\r\n\t\t\t\tlet readyCallback = (ev: MessageEvent) => {\r\n\t\t\t\t\tlet data = JSON.parse(ev.data);\r\n\t\t\t\t\tif (!data) {\r\n\t\t\t\t\t\tws.removeEventListener('message', readyCallback);\r\n\t\t\t\t\t\tresolve(false);\r\n\t\t\t\t\t} else if (data.t === 'READY' && data.d.guilds && data.d.guilds.length < 1) {\r\n\t\t\t\t\t\tws.removeEventListener('message', readyCallback);\r\n\t\t\t\t\t\tsetTimeout(() => { // wait for d.js to process the msg\r\n\t\t\t\t\t\t\tthis.props.client.emit('loggedIn');\r\n\t\t\t\t\t\t\tif (++i === wss.length) {\r\n\t\t\t\t\t\t\t\tresolve(true);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, 2000);\r\n\t\t\t\t\t} else if (data.t === 'GUILD_CREATE') { // If we have more than 1 guild wait for first guild\r\n\t\t\t\t\t\tws.removeEventListener('message', readyCallback);\r\n\t\t\t\t\t\tthis.props.client.emit('loggedIn');\r\n\t\t\t\t\t\tif (++i === wss.length) {\r\n\t\t\t\t\t\t\tresolve(true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\tws.addEventListener('message', readyCallback);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tprivate connect(): void {\r\n\t\tlet input: HTMLInputElement = document.getElementById('token-input') as HTMLInputElement;\r\n\t\tif (input.value) {\r\n\t\t\tlet form: HTMLElement = document.getElementById('token-form');\r\n\t\t\tinput.disabled = true;\r\n\r\n\t\t\tthis.props.loader.load(this.props.client.login(input.value))\r\n\t\t\t\t.catch(_ => {\r\n\t\t\t\t\tinput.style.border = '2px solid red';\r\n\t\t\t\t\tinput.disabled = false;\r\n\t\t\t\t});\r\n\r\n\t\t\tthis.createReadyPromise()\r\n\t\t\t\t.then((succ: boolean) => {\r\n\t\t\t\t\tif (!succ) {\r\n\t\t\t\t\t\tthis.props.loader.load(this.props.client.destroy())\r\n\t\t\t\t\t\t\t.then(_ => {\r\n\t\t\t\t\t\t\t\tinput.style.border = '2px solid red';\r\n\t\t\t\t\t\t\t\tinput.disabled = false;\r\n\t\t\t\t\t\t\t\tthis.props.logger.error('Connection timed out or failed');\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (!this.props.client.user.bot) { // we do NOT endorse user bots\r\n\t\t\t\t\t\tthis.props.loader.load(this.props.client.destroy())\r\n\t\t\t\t\t\t\t.then(_ => {\r\n\t\t\t\t\t\t\t\tinput.style.border = '2px solid red';\r\n\t\t\t\t\t\t\t\tinput.disabled = false;\r\n\t\t\t\t\t\t\t\tthis.props.logger.error('You cannot login with a user token');\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tform.style.display = 'none';\r\n\t\t\t\t\t\tlet dashboard: HTMLElement = document.getElementById('dashboard');\r\n\t\t\t\t\t\tdashboard.style.display = 'block';\r\n\r\n\t\t\t\t\t\tlet header: HTMLDivElement = document.getElementsByClassName('header')[0] as HTMLDivElement;\r\n\t\t\t\t\t\theader.style.display = 'none';\r\n\r\n\t\t\t\t\t\tthis.props.logger.success(`Logged in as ${this.props.client.user.tag}!`);\r\n\t\t\t\t\t\tinput.disabled = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t} else {\r\n\t\t\tinput.style.border = '2px solid red';\r\n\t\t\tinput.disabled = false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onConnect(e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\r\n\t\te.preventDefault();\r\n\t\tthis.connect();\r\n\t}\r\n\r\n\tprivate onTokenChange(e: React.ChangeEvent<HTMLInputElement>): void {\r\n\t\tif (!e.target.value) {\r\n\t\t\te.target.style.border = 'none';\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onKeyPress(e: React.KeyboardEvent<HTMLInputElement>): void {\r\n\t\tif (e.which === 13) {\r\n\t\t\tthis.connect();\r\n\t\t}\r\n\t}\r\n\r\n\trender(): JSX.Element {\r\n\t\treturn (<div id='token-form'>\r\n\t\t\t<span className='title'>BOT LOGIN</span>\r\n\t\t\t<input onKeyPress={this.onKeyPress.bind(this)} onChange={this.onTokenChange} id='token-input' type='password' placeholder='discord bot token...' />\r\n\t\t\t<button className='classic-btn' onClick={this.onConnect.bind(this)}>Connect</button>\r\n\t\t</div>);\r\n\t}\r\n}\r\n","import * as React from 'react';\r\n\r\nexport class Loader extends React.Component {\r\n\trender(): JSX.Element {\r\n\t\treturn <div id='loader'>loading</div>;\r\n\t}\r\n}","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nvar NotyfNotification = /** @class */ (function () {\r\n    function NotyfNotification(options) {\r\n        this.options = options;\r\n    }\r\n    return NotyfNotification;\r\n}());\r\nvar NotyfArrayEvent;\r\n(function (NotyfArrayEvent) {\r\n    NotyfArrayEvent[NotyfArrayEvent[\"Add\"] = 0] = \"Add\";\r\n    NotyfArrayEvent[NotyfArrayEvent[\"Remove\"] = 1] = \"Remove\";\r\n})(NotyfArrayEvent || (NotyfArrayEvent = {}));\r\nvar NotyfArray = /** @class */ (function () {\r\n    function NotyfArray() {\r\n        this.notifications = [];\r\n    }\r\n    NotyfArray.prototype.push = function (elem) {\r\n        this.notifications.push(elem);\r\n        this.updateFn(elem, NotyfArrayEvent.Add, this.notifications);\r\n    };\r\n    NotyfArray.prototype.splice = function (index, num) {\r\n        var elem = this.notifications.splice(index, num)[0];\r\n        this.updateFn(elem, NotyfArrayEvent.Remove, this.notifications);\r\n    };\r\n    NotyfArray.prototype.indexOf = function (elem) {\r\n        return this.notifications.indexOf(elem);\r\n    };\r\n    NotyfArray.prototype.onupdate = function (fn) {\r\n        this.updateFn = fn;\r\n    };\r\n    return NotyfArray;\r\n}());\n\nvar DEFAULT_OPTIONS = {\r\n    types: [\r\n        {\r\n            type: 'success',\r\n            className: 'notyf__toast--success',\r\n            backgroundColor: '#3dc763',\r\n            icon: {\r\n                className: 'notyf__icon--success',\r\n                tagName: 'i',\r\n            },\r\n        },\r\n        {\r\n            type: 'error',\r\n            className: 'notyf__toast--error',\r\n            backgroundColor: '#ed3d3d',\r\n            icon: {\r\n                className: 'notyf__icon--error',\r\n                tagName: 'i',\r\n            },\r\n        },\r\n    ],\r\n    duration: 2000,\r\n    ripple: true,\r\n};\n\nvar NotyfView = /** @class */ (function () {\r\n    function NotyfView() {\r\n        this.notifications = [];\r\n        // Creates the main notifications container\r\n        var docFrag = document.createDocumentFragment();\r\n        var notyfContainer = this._createHTLMElement({ tagName: 'div', className: 'notyf' });\r\n        docFrag.appendChild(notyfContainer);\r\n        document.body.appendChild(docFrag);\r\n        this.container = notyfContainer;\r\n        // Identifies the main animation end event\r\n        this.animationEndEventName = this._getAnimationEndEventName();\r\n        this._createA11yContainer();\r\n    }\r\n    NotyfView.prototype.update = function (notification, type) {\r\n        if (type === NotyfArrayEvent.Add) {\r\n            this.addNotification(notification);\r\n        }\r\n        else if (type === NotyfArrayEvent.Remove) {\r\n            this.removeNotification(notification);\r\n        }\r\n    };\r\n    NotyfView.prototype.removeNotification = function (notification) {\r\n        var _this = this;\r\n        var renderedNotification = this._popRenderedNotification(notification);\r\n        var node;\r\n        if (!renderedNotification) {\r\n            return;\r\n        }\r\n        node = renderedNotification.node;\r\n        node.classList.add('notyf__toast--disappear');\r\n        var handleEvent;\r\n        node.addEventListener(this.animationEndEventName, handleEvent = function (event) {\r\n            if (event.target === node) {\r\n                node.removeEventListener(_this.animationEndEventName, handleEvent);\r\n                _this.container.removeChild(node);\r\n            }\r\n        });\r\n    };\r\n    NotyfView.prototype.addNotification = function (notification) {\r\n        var node = this._renderNotification(notification);\r\n        this.notifications.push({ notification: notification, node: node });\r\n        // For a11y purposes, we still want to announce that there's a notification in the screen\r\n        // even if it comes with no message.\r\n        this._announce(notification.options.message || 'Notification');\r\n    };\r\n    NotyfView.prototype._renderNotification = function (notification) {\r\n        var card = this._buildNotificationCard(notification);\r\n        var className = notification.options.className;\r\n        if (className) {\r\n            card.classList.add(className);\r\n        }\r\n        this.container.appendChild(card);\r\n        return card;\r\n    };\r\n    NotyfView.prototype._popRenderedNotification = function (notification) {\r\n        var idx = -1;\r\n        for (var i = 0; i < this.notifications.length && idx < 0; i++) {\r\n            if (this.notifications[i].notification === notification) {\r\n                idx = i;\r\n            }\r\n        }\r\n        if (idx !== -1) {\r\n            return this.notifications.splice(idx, 1)[0];\r\n        }\r\n        return;\r\n    };\r\n    NotyfView.prototype._buildNotificationCard = function (notification) {\r\n        var options = notification.options;\r\n        var iconOpts = options.icon;\r\n        // Create elements\r\n        var notificationElem = this._createHTLMElement({ tagName: 'div', className: 'notyf__toast' });\r\n        var ripple = this._createHTLMElement({ tagName: 'div', className: 'notyf__ripple' });\r\n        var wrapper = this._createHTLMElement({ tagName: 'div', className: 'notyf__wrapper' });\r\n        var message = this._createHTLMElement({ tagName: 'div', className: 'notyf__message' });\r\n        message.innerHTML = options.message || '';\r\n        var color = options.backgroundColor;\r\n        // build the icon and append it to the card\r\n        if (iconOpts && typeof iconOpts === 'object') {\r\n            var iconContainer = this._createHTLMElement({ tagName: 'div', className: 'notyf__icon' });\r\n            var icon = this._createHTLMElement({\r\n                tagName: iconOpts.tagName || 'i',\r\n                className: iconOpts.className,\r\n                text: iconOpts.text,\r\n            });\r\n            if (color) {\r\n                icon.style.color = color;\r\n            }\r\n            iconContainer.appendChild(icon);\r\n            wrapper.appendChild(iconContainer);\r\n        }\r\n        wrapper.appendChild(message);\r\n        notificationElem.appendChild(wrapper);\r\n        // add ripple if applicable, else just paint the full toast\r\n        if (color) {\r\n            if (options.ripple) {\r\n                ripple.style.backgroundColor = color;\r\n                notificationElem.appendChild(ripple);\r\n            }\r\n            else {\r\n                notificationElem.style.backgroundColor = color;\r\n            }\r\n        }\r\n        return notificationElem;\r\n    };\r\n    NotyfView.prototype._createHTLMElement = function (_a) {\r\n        var tagName = _a.tagName, className = _a.className, text = _a.text;\r\n        var elem = document.createElement(tagName);\r\n        if (className) {\r\n            elem.className = className;\r\n        }\r\n        elem.textContent = text || null;\r\n        return elem;\r\n    };\r\n    /**\r\n     * Creates an invisible container which will announce the notyfs to\r\n     * screen readers\r\n     */\r\n    NotyfView.prototype._createA11yContainer = function () {\r\n        var a11yContainer = this._createHTLMElement({ tagName: 'div', className: 'notyf-announcer' });\r\n        a11yContainer.setAttribute('aria-atomic', 'true');\r\n        a11yContainer.setAttribute('aria-live', 'polite');\r\n        // Set the a11y container to be visible hidden. Can't use display: none as\r\n        // screen readers won't read it.\r\n        a11yContainer.style.border = '0';\r\n        a11yContainer.style.clip = 'rect(0 0 0 0)';\r\n        a11yContainer.style.height = '1px';\r\n        a11yContainer.style.margin = '-1px';\r\n        a11yContainer.style.overflow = 'hidden';\r\n        a11yContainer.style.padding = '0';\r\n        a11yContainer.style.position = 'absolute';\r\n        a11yContainer.style.width = '1px';\r\n        a11yContainer.style.outline = '0';\r\n        document.body.appendChild(a11yContainer);\r\n        this.a11yContainer = a11yContainer;\r\n    };\r\n    /**\r\n     * Announces a message to screenreaders.\r\n     */\r\n    NotyfView.prototype._announce = function (message) {\r\n        var _this = this;\r\n        this.a11yContainer.textContent = '';\r\n        // This 100ms timeout is necessary for some browser + screen-reader combinations:\r\n        // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\r\n        // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\r\n        //   second time without clearing and then using a non-zero delay.\r\n        // (using JAWS 17 at time of this writing).\r\n        // https://github.com/angular/material2/blob/master/src/cdk/a11y/live-announcer/live-announcer.ts\r\n        setTimeout(function () {\r\n            _this.a11yContainer.textContent = message;\r\n        }, 100);\r\n    };\r\n    /**\r\n     * Determine which animationend event is supported\r\n     */\r\n    NotyfView.prototype._getAnimationEndEventName = function () {\r\n        var el = document.createElement('_fake');\r\n        var transitions = {\r\n            MozTransition: 'animationend',\r\n            OTransition: 'oAnimationEnd',\r\n            WebkitTransition: 'webkitAnimationEnd',\r\n            transition: 'animationend',\r\n        };\r\n        var t;\r\n        for (t in transitions) {\r\n            if (el.style[t] !== undefined) {\r\n                return transitions[t];\r\n            }\r\n        }\r\n        // No supported animation end event. Using \"animationend\" as a fallback\r\n        return 'animationend';\r\n    };\r\n    return NotyfView;\r\n}());\n\n/**\r\n * Main controller class. Defines the main Notyf API.\r\n */\r\nvar Notyf = /** @class */ (function () {\r\n    function Notyf(opts) {\r\n        var _this = this;\r\n        this.notifications = new NotyfArray();\r\n        this.view = new NotyfView();\r\n        var types = this.registerTypes(opts);\r\n        this.options = __assign({}, DEFAULT_OPTIONS, opts);\r\n        this.options.types = types;\r\n        this.notifications.onupdate(function (elem, type) {\r\n            _this.view.update(elem, type);\r\n        });\r\n    }\r\n    Notyf.prototype.error = function (payload) {\r\n        var options = this.normalizeOptions('error', payload);\r\n        this.open(options);\r\n    };\r\n    Notyf.prototype.success = function (payload) {\r\n        var options = this.normalizeOptions('success', payload);\r\n        this.open(options);\r\n    };\r\n    Notyf.prototype.open = function (options) {\r\n        var defaultOpts = this.options.types.find(function (_a) {\r\n            var type = _a.type;\r\n            return type === options.type;\r\n        }) || {};\r\n        var config = __assign({}, defaultOpts, options);\r\n        config.ripple = config.ripple === undefined ? this.options.ripple : config.ripple;\r\n        var notification = new NotyfNotification(config);\r\n        this._pushNotification(notification);\r\n    };\r\n    Notyf.prototype._pushNotification = function (notification) {\r\n        var _this = this;\r\n        this.notifications.push(notification);\r\n        var duration = notification.options.duration || this.options.duration;\r\n        setTimeout(function () {\r\n            var index = _this.notifications.indexOf(notification);\r\n            _this.notifications.splice(index, 1);\r\n        }, duration);\r\n    };\r\n    Notyf.prototype.normalizeOptions = function (type, payload) {\r\n        var options = { type: type };\r\n        if (typeof payload === 'string') {\r\n            options.message = payload;\r\n        }\r\n        else if (typeof payload === 'object') {\r\n            options = __assign({}, options, payload);\r\n        }\r\n        return options;\r\n    };\r\n    Notyf.prototype.registerTypes = function (opts) {\r\n        var incomingTypes = (opts && opts.types || []).slice();\r\n        var finalTypes = DEFAULT_OPTIONS.types.map(function (defaultType) {\r\n            // find if there's a default type within the user input's types, if so, it means the user\r\n            // wants to change some of the default settings\r\n            var userTypeIdx = incomingTypes.findIndex(function (t) { return t.type === defaultType.type; });\r\n            var userType = userTypeIdx !== -1 ? incomingTypes.splice(userTypeIdx, 1)[0] : {};\r\n            return __assign({}, defaultType, userType);\r\n        });\r\n        return finalTypes.concat(incomingTypes);\r\n    };\r\n    return Notyf;\r\n}());\n\nexport { Notyf, NotyfNotification, NotyfArrayEvent, NotyfArray, DEFAULT_OPTIONS, NotyfView };\n","import { Logger } from './logger';\r\n\r\nexport class Loader {\r\n\tprivate logger: Logger;\r\n\tprivate promiseAmount: number;\r\n\r\n\tconstructor(logger: Logger) {\r\n\t\tthis.logger = logger;\r\n\t\tthis.promiseAmount = 0;\r\n\t}\r\n\r\n\tpublic async load(promise: Promise<any>): Promise<any> {\r\n\t\tlet loader: HTMLElement = document.getElementById('loader');\r\n\t\tloader.style.display = 'block';\r\n\t\tthis.promiseAmount++;\r\n\r\n\t\ttry {\r\n\t\t\tlet res: any = await promise;\r\n\t\t\tthis.promiseAmount--;\r\n\t\t\tif (--this.promiseAmount < 1) {\r\n\t\t\t\tloader.style.display = 'none';\r\n\t\t\t}\r\n\r\n\t\t\treturn res;\r\n\t\t} catch (err) {\r\n\t\t\tlet error: Error = err as Error;\r\n\t\t\tthis.logger.error(error.message);\r\n\t\t\tif (--this.promiseAmount < 1) {\r\n\t\t\t\tloader.style.display = 'none';\r\n\t\t\t}\r\n\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n}","import * as React from 'react';\r\n\r\nimport { ConduitProps } from '../../utils/conduitProps';\r\nimport { DashboardHeader } from './header/dashboardHeader';\r\nimport { DashboardPanel } from './dashboardPanel';\r\nimport { DashboardConsole } from './dashboardConsole';\r\nimport { DashboardGuilds } from './guild/dashboardGuilds';\r\nimport { ClientHelper } from '../../utils/clientHelper';\r\n\r\nexport class Dashboard extends React.Component<ConduitProps, {}> {\r\n\tprivate clientHelper: ClientHelper;\r\n\r\n\tconstructor(props: ConduitProps) {\r\n\t\tsuper(props);\r\n\t\tthis.clientHelper = new ClientHelper(this.props.client);\r\n\t\tthis.props.client\r\n\t\t\t.on('loggedIn', this.onLoggedIn.bind(this))\r\n\t\t\t.on('ready', this.onReady.bind(this));\r\n\t}\r\n\r\n\tprivate async onLoggedIn(): Promise<void> {\r\n\t\tlet wss: Array<WebSocket> = await this.clientHelper.getAllGatewayWS();\r\n\t\tif (wss.length === 0) return;\r\n\r\n\t\tlet count: number = 0;\r\n\t\tlet title: HTMLSpanElement = this.getPanelTitle('guild-panel');\r\n\t\tlet guildCount: number = 0;\r\n\t\tfor (let ws of wss) {\r\n\t\t\tlet guildCallback = (ev: MessageEvent) => {\r\n\t\t\t\tlet data = JSON.parse(ev.data);\r\n\t\t\t\tif (data.t != 'GUILD_CREATE') return;\r\n\r\n\t\t\t\tcount++;\r\n\t\t\t\tlet value: number = Math.ceil(count / guildCount* 100);\r\n\t\t\t\tif (value >= 100) {\r\n\t\t\t\t\ttitle.textContent = 'GUILDS';\r\n\t\t\t\t\tws.removeEventListener('message', guildCallback);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttitle.textContent = `GUILDS (caching: ${value}%)`;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (data.d) {\r\n\t\t\t\t\tthis.props.client.emit('guildCached', data.d.id, data.d.name);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tws.addEventListener('message', guildCallback);\r\n\t\t\tws.addEventListener('close', async _ => { // try to switch to new gateway ws\r\n\t\t\t\tws.removeEventListener('message', guildCallback);\r\n\t\t\t\tws = await this.clientHelper.getGatewayWS();\r\n\t\t\t\tif (!ws) return;\r\n\t\t\t\tws.addEventListener('message', guildCallback);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (!this.props.client.shard) {\r\n\t\t\tguildCount = this.props.client.guilds.size;\r\n\t\t} else {\r\n\t\t\tguildCount = (await this.props.client.shard.fetchClientValues('guilds.size')).reduce((a: number, b: number) => a + b, 0);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onReady(): void {\r\n\t\tlet title: HTMLSpanElement = this.getPanelTitle('guild-panel');\r\n\t\ttitle.textContent = 'GUILDS';\r\n\t}\r\n\r\n\tprivate getPanelTitle(id: string): HTMLSpanElement {\r\n\t\tlet panel: HTMLElement = document.getElementById(id);\r\n\t\treturn panel.getElementsByClassName('title')[0] as HTMLSpanElement;\r\n\t}\r\n\r\n\trender(): JSX.Element {\r\n\t\treturn <div id='dashboard'>\r\n\t\t\t<DashboardHeader client={this.props.client} logger={this.props.logger} loader={this.props.loader} />\r\n\t\t\t<div className='row' style={{ paddingBottom: '400px' }}>\r\n\t\t\t\t<div className='col-md-6'>\r\n\t\t\t\t\t<DashboardPanel id='guild-panel' title='GUILDS' foldable={true}>\r\n\t\t\t\t\t\t<DashboardGuilds client={this.props.client} logger={this.props.logger} loader={this.props.loader} />\r\n\t\t\t\t\t</DashboardPanel>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='col-md-6'>\r\n\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t<div className='col-md-12'>\r\n\t\t\t\t\t\t\t<DashboardPanel title='TOOLBOX' foldable={true}>\r\n\t\t\t\t\t\t\t</DashboardPanel>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='col-md-12'>\r\n\t\t\t\t\t\t\t<DashboardPanel title='SCRIPTS' foldable={true}>\r\n\t\t\t\t\t\t\t</DashboardPanel>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='col-md-12'>\r\n\t\t\t\t\t<DashboardPanel id='console-panel' title='CONSOLE' foldable={true} style={{ position: 'fixed', bottom: '0px', width: '100%' }}>\r\n\t\t\t\t\t\t<DashboardConsole client={this.props.client} logger={this.props.logger} loader={this.props.loader} />\r\n\t\t\t\t\t</DashboardPanel>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>;\r\n\t}\r\n}","import * as React from 'react';\r\n\r\nimport { ConduitProps } from '../../../utils/conduitProps';\r\nimport { DashboardHeaderInfo } from './dashboardHeaderInfo';\r\n\r\nexport class DashboardHeader extends React.Component<ConduitProps, {}> {\r\n\trender(): JSX.Element {\r\n\t\treturn <div className='container' id='dashboard-header'>\r\n\t\t\t<div className='dashboard-header'>\r\n\t\t\t\t<span className='title'>GENERAL</span>\r\n\t\t\t</div>\r\n\t\t\t<DashboardHeaderInfo client={this.props.client} logger={this.props.logger} loader={this.props.loader} />\r\n\t\t</div>;\r\n\t}\r\n}","import * as React from 'react';\r\nimport * as Discord from 'discord.js';\r\n\r\nimport { ConduitProps } from '../../../utils/conduitProps';\r\nimport { Input } from '../../controls/input';\r\nimport { Select } from '../../controls/select';\r\nimport { BotAvatar } from '../../controls/avatar/botAvatar';\r\n\r\nexport class DashboardHeaderInfo extends React.Component<ConduitProps, {}> {\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.props.client\r\n\t\t\t.on('ready', this.initialize.bind(this))\r\n\t\t\t.on('loggedIn', this.initialize.bind(this))\r\n\t\t\t.on('userUpdate', this.onUserUpdate.bind(this))\r\n\t\t\t.on('guildCreate', this.onGuildX.bind(this))\r\n\t\t\t.on('guildCached', this.onGuildX.bind(this))\r\n\t\t\t.on('guildDelete', this.onGuildX.bind(this));\r\n\t}\r\n\r\n\tprivate initialize(): void {\r\n\t\tlet user: Discord.ClientUser = this.props.client.user;\r\n\t\tlet name: HTMLInputElement = document.getElementById('bot-tag') as HTMLInputElement;\r\n\t\tlet game: HTMLInputElement = document.getElementById('bot-game') as HTMLInputElement;\r\n\t\tlet shards: HTMLElement = document.getElementById('shard-count');\r\n\t\tlet guilds: HTMLElement = document.getElementById('guild-count');\r\n\t\tlet users: HTMLElement = document.getElementById('user-count');\r\n\t\tlet botId: HTMLElement = document.getElementById('bot-id');\r\n\r\n\t\tname.value = user.username;\r\n\t\tguilds.innerText = this.props.client.guilds.size.toString();\r\n\t\tusers.innerText = this.props.client.users.size.toString();\r\n\t\tbotId.innerText = user.id;\r\n\r\n\t\tif (user.presence.game) {\r\n\t\t\tgame.value = user.presence.game.name;\r\n\t\t}\r\n\r\n\t\tif (this.props.client.shard) {\r\n\t\t\tshards.innerText = this.props.client.shard.count.toString();\r\n\t\t} else {\r\n\t\t\tshards.innerText = '1';\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onUserUpdate(_: Discord.User, newUser: Discord.User): void {\r\n\t\tlet user: Discord.ClientUser = this.props.client.user;\r\n\t\tif (newUser.id === user.id) {\r\n\t\t\tlet name: HTMLInputElement = document.getElementById('bot-tag') as HTMLInputElement;\r\n\t\t\tlet game: HTMLInputElement = document.getElementById('bot-game') as HTMLInputElement;\r\n\t\t\tname.value = newUser.username;\r\n\t\t\tif (user.presence.game) {\r\n\t\t\t\tgame.value = user.presence.game.name;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onGuildX(_: Discord.Guild): void {\r\n\t\tlet shards: HTMLElement = document.getElementById('shard-count');\r\n\t\tlet guilds: HTMLElement = document.getElementById('guild-count');\r\n\t\tlet users: HTMLElement = document.getElementById('user-count');\r\n\r\n\t\tguilds.innerText = this.props.client.guilds.size.toString();\r\n\t\tusers.innerText = this.props.client.users.size.toString();\r\n\t\tif (this.props.client.shard) {\r\n\t\t\tshards.innerText = this.props.client.shard.count.toString();\r\n\t\t} else {\r\n\t\t\tshards.innerText = '1';\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onBotNameValidated(_: React.KeyboardEvent<HTMLInputElement>): void {\r\n\t\tlet name: HTMLInputElement = document.getElementById('bot-tag') as HTMLInputElement;\r\n\t\tif (name.value) {\r\n\t\t\tthis.props.loader.load(this.props.client.user.setUsername(name.value))\r\n\t\t\t\t.then(_ => {\r\n\t\t\t\t\tname.style.border = '1px solid black';\r\n\t\t\t\t\tthis.props.logger.success(`Changed username to '${name.value}'`)\r\n\t\t\t\t})\r\n\t\t\t\t.catch(_ => name.value = this.props.client.user.username);\r\n\t\t} else {\r\n\t\t\tname.value = this.props.client.user.username;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onBotGameValidated(_: React.KeyboardEvent<HTMLInputElement>): void {\r\n\t\tlet game: HTMLInputElement = document.getElementById('bot-game') as HTMLInputElement;\r\n\t\tlet activity: HTMLSelectElement = document.getElementById('bot-activity') as HTMLSelectElement;\r\n\t\tif (game.value) {\r\n\t\t\tlet actNumber: number = this.activityNameToNum(activity.value);\r\n\t\t\tthis.props.loader.load(this.props.client.user.setActivity(game.value, { type: actNumber }))\r\n\t\t\t\t.then(_ => this.props.logger.success(`Changed activity to '${activity.value.toLowerCase()} ${game.value}'`))\r\n\t\t\t\t.catch(_ => {\r\n\t\t\t\t\tlet gamePresence: Discord.Game = this.props.client.user.presence.game;\r\n\t\t\t\t\tif (gamePresence) {\r\n\t\t\t\t\t\tgame.value = gamePresence.name;\r\n\t\t\t\t\t\tlet act = this.activityNumToName(gamePresence.type);\r\n\t\t\t\t\t\tactivity.value = act;\r\n\t\t\t\t\t\tactivity.nextSibling.textContent = act[0] + act.slice(1).toLowerCase();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.props.loader.load(this.props.client.user.setActivity(''))\r\n\t\t\t\t.then(_ => this.props.logger.success('Removed the current game activity'));\r\n\t\t}\r\n\t}\r\n\r\n\tprivate activityNumToName(actNum: number): string {\r\n\t\tswitch (actNum) {\r\n\t\t\tcase 0:\r\n\t\t\t\treturn 'PLAYING';\r\n\t\t\tcase 1:\r\n\t\t\t\treturn 'STREAMING';\r\n\t\t\tcase 2:\r\n\t\t\t\treturn 'LISTENING';\r\n\t\t\tcase 3:\r\n\t\t\t\treturn 'WATCHING';\r\n\t\t\tdefault:\r\n\t\t\t\treturn '';\r\n\t\t}\r\n\t}\r\n\r\n\tprivate activityNameToNum(activity: string): number {\r\n\t\tswitch (activity) {\r\n\t\t\tcase 'PLAYING':\r\n\t\t\t\treturn 0;\r\n\t\t\tcase 'STREAMING':\r\n\t\t\t\treturn 1;\r\n\t\t\tcase 'LISTENING':\r\n\t\t\t\treturn 2;\r\n\t\t\tcase 'WATCHING':\r\n\t\t\t\treturn 3;\r\n\t\t\tdefault:\r\n\t\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate statusNameToDisplay(status: string): string {\r\n\t\tswitch (status) {\r\n\t\t\tcase 'online':\r\n\t\t\t\treturn 'Online';\r\n\t\t\tcase 'idle':\r\n\t\t\t\treturn 'Idle';\r\n\t\t\tcase 'dnd':\r\n\t\t\t\treturn 'Do Not Disturb';\r\n\t\t\tdefault:\r\n\t\t\t\treturn 'Online';\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onBotPresenceChanged(actName: string): void {\r\n\t\tlet game: HTMLInputElement = document.getElementById('bot-game') as HTMLInputElement;\r\n\t\tlet activity: HTMLSelectElement = document.getElementById('bot-activity') as HTMLSelectElement;\r\n\t\tif (game.value) {\r\n\t\t\tlet actNumber: number = this.activityNameToNum(actName);\r\n\t\t\tthis.props.loader.load(this.props.client.user.setActivity(game.value, { type: actNumber }))\r\n\t\t\t\t.then(_ => this.props.logger.success(`Changed activity to '${actName.toLowerCase()} ${game.value}'`))\r\n\t\t\t\t.catch(_ => {\r\n\t\t\t\t\tlet gamePresence: Discord.Game = this.props.client.user.presence.game;\r\n\t\t\t\t\tif (gamePresence) {\r\n\t\t\t\t\t\tgame.value = gamePresence.name;\r\n\t\t\t\t\t\tlet act = this.activityNumToName(gamePresence.type);\r\n\t\t\t\t\t\tactivity.value = act;\r\n\t\t\t\t\t\tactivity.nextSibling.textContent = act[0] + act.slice(1).toLowerCase();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onBotStatusChanged(status: string): void {\r\n\t\tlet select: HTMLSelectElement = document.getElementById('bot-status') as HTMLSelectElement;\r\n\t\tthis.props.loader.load(this.props.client.user.setPresence({ status: status as Discord.PresenceStatus }))\r\n\t\t\t.then(_ => this.props.logger.success(`Changed status to '${this.statusNameToDisplay(status)}'`))\r\n\t\t\t.catch(_ => {\r\n\t\t\t\tstatus = this.props.client.user.presence.status;\r\n\t\t\t\tselect.value = status;\r\n\t\t\t\tselect.nextSibling.textContent = this.statusNameToDisplay(status);\r\n\t\t\t});\r\n\t}\r\n\r\n\tprivate onBotClose(_: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\r\n\t\tthis.props.loader.load(this.props.client.destroy())\r\n\t\t\t.then(_ => this.props.logger.success('Disconnected'));\r\n\t\tlet dashboard: HTMLElement = document.getElementById('dashboard');\r\n\t\tlet form: HTMLElement = document.getElementById('token-form');\r\n\t\tdashboard.style.display = 'none';\r\n\t\tform.style.display = 'block';\r\n\r\n\t\tlocation.reload();\r\n\t}\r\n\r\n\tprivate onInviteClick(): void {\r\n\t\twindow.open(`https://discordapp.com/oauth2/authorize?client_id=${this.props.client.user.id}&scope=bot&permissions=0`);\r\n\t}\r\n\r\n\trender(): JSX.Element {\r\n\t\treturn <div className='row dashboard-info '>\r\n\t\t\t<div className='col-md-1'>\r\n\t\t\t\t<div style={{ height: '5px' }} />\r\n\t\t\t\t<BotAvatar id='bot-avatar' client={this.props.client} logger={this.props.logger} loader={this.props.loader} />\r\n\t\t\t</div>\r\n\t\t\t<div className='col-md-2'>\r\n\t\t\t\t<Input placeholder='name...' id='bot-tag' onValidated={this.onBotNameValidated.bind(this)} />\r\n\t\t\t\t<Input placeholder='game...' id='bot-game' onValidated={this.onBotGameValidated.bind(this)} />\r\n\t\t\t</div>\r\n\t\t\t<div className='col-md-2'>\r\n\t\t\t\t<Select id='bot-activity' onSelected={this.onBotPresenceChanged.bind(this)} defaultValue='PLAYING'>\r\n\t\t\t\t\t<option value='PLAYING'>Playing</option>\r\n\t\t\t\t\t<option value='STREAMING'>Streaming</option>\r\n\t\t\t\t\t<option value='LISTENING'>Listening</option>\r\n\t\t\t\t\t<option value='WATCHING'>Watching</option>\r\n\t\t\t\t</Select>\r\n\t\t\t\t<div style={{ height: '5px' }} />\r\n\t\t\t\t<Select id='bot-status' onSelected={this.onBotStatusChanged.bind(this)} defaultValue='online'>\r\n\t\t\t\t\t<option value='online'>Online</option>\r\n\t\t\t\t\t<option value='idle'>Idle</option>\r\n\t\t\t\t\t<option value='dnd'>Do Not Disturb</option>\r\n\t\t\t\t</Select>\r\n\t\t\t</div>\r\n\t\t\t<div className='bot-stats col-md-2'>\r\n\t\t\t\t<div style={{ height: '5px' }} />\r\n\t\t\t\tShards: <span id='shard-count'>>?</span><br />\r\n\t\t\t\tGuilds: <span id='guild-count'>>?</span><br />\r\n\t\t\t\tUsers: <span id='user-count'>?</span>\r\n\t\t\t</div>\r\n\t\t\t<div className='bot-stats col-md-3'>\r\n\t\t\t\t<div style={{ height: '5px' }} />\r\n\t\t\t\tID: <span id='bot-id'>0</span><br />\r\n\t\t\t\t<button className='purple-btn small-btn'\r\n\t\t\t\t\tstyle={{ marginTop: '5px' }}\r\n\t\t\t\t\tonClick={this.onInviteClick.bind(this)}>\r\n\t\t\t\t\tBot Invite Link\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<div className='col-md-2'>\r\n\t\t\t\t<div style={{ height: '5px' }} />\r\n\t\t\t\t<button className='red-btn' onClick={this.onBotClose.bind(this)} id='disconnect-btn'>Disconnect</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t}\r\n}","import * as Discord from 'discord.js';\r\n\r\nimport { Avatar, AvatarProps } from './avatar';\r\nimport { HttpClient, HttpResult } from '../../../http/httpClient';\r\n\r\nexport class BotAvatar extends Avatar<AvatarProps> {\r\n\tprivate httpClient: HttpClient;\r\n\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.httpClient = new HttpClient();\r\n\t\tthis.props.client\r\n\t\t\t.on('ready', this.initialize.bind(this))\r\n\t\t\t.on('loggedIn', this.initialize.bind(this))\r\n\t\t\t.on('userUpdate', this.onUserUpdate.bind(this));\r\n\t}\r\n\r\n\tprivate updateAvatar(): void {\r\n\t\tlet avatar: HTMLElement = document.getElementById(this.props.id);\r\n\t\tlet img: HTMLImageElement = avatar.getElementsByTagName('img')[0];\r\n\t\tlet alt: HTMLSpanElement = avatar.getElementsByTagName('span')[0];\r\n\r\n\t\tlet url: string = this.props.client.user.avatarURL;\r\n\t\talt.textContent = this.props.client.user.username.split(' ').map((p: string) => p[0]).join('');\r\n\t\tif (url) {\r\n\t\t\timg.style.display = 'block';\r\n\t\t\timg.src = url;\r\n\t\t\talt.style.display = 'none';\r\n\t\t} else {\r\n\t\t\timg.style.display = 'none';\r\n\t\t\talt.style.display = 'block';\r\n\t\t}\r\n\t}\r\n\r\n\tprivate initialize(): void {\r\n\t\tthis.updateAvatar();\r\n\t}\r\n\r\n\tprivate onUserUpdate(_: Discord.User, newUser: Discord.User): void {\r\n\t\tif (this.props.client.user.id === newUser.id) {\r\n\t\t\tthis.updateAvatar();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected onValidated(fileType: string, base64: string): void {\r\n\t\tlet body: string = JSON.stringify({\r\n\t\t\tusername: this.props.client.user.username,\r\n\t\t\tavatar: `data:${fileType};base64,${base64}`,\r\n\t\t});\r\n\t\tthis.props.loader.load(this.httpClient.patch('https://discordapp.com/api/users/@me', body, {\r\n\t\t\t'Authorization': `Bot ${this.props.client.token}`,\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t})).then((res: HttpResult) => {\r\n\t\t\tif (res.isSuccess()) {\r\n\t\t\t\tthis.props.logger.success('New avatar set');\r\n\t\t\t\tthis.updateAvatar();\r\n\t\t\t} else {\r\n\t\t\t\tlet obj = res.asObject<{ avatar?: Array<string> }>();\r\n\t\t\t\tif (obj.avatar && obj.avatar[0]) {\r\n\t\t\t\t\tthis.props.logger.error(obj.avatar[0]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.props.logger.error('Coult not set new avatar');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}","import * as React from 'react';\r\nimport * as Discord from 'discord.js';\r\n\r\nimport { ConduitProps } from '../../utils/conduitProps';\r\nimport { LogEventArgs, LogType } from '../../utils/logger';\r\nimport { Checkbox } from '../controls/checkbox';\r\nimport { Input } from '../controls/input';\r\n\r\nenum DiscordEventType {\r\n\tChannel,\r\n\tGuild,\r\n\tEmoji,\r\n\tRole,\r\n\tGlobal,\r\n\tConduit,\r\n}\r\n\r\nexport class DashboardConsole extends React.Component<ConduitProps, {}> {\r\n\tprivate enabledEvents: any = {\r\n\t\t[DiscordEventType.Channel]: true,\r\n\t\t[DiscordEventType.Guild]: true,\r\n\t\t[DiscordEventType.Emoji]: true,\r\n\t\t[DiscordEventType.Role]: true,\r\n\t\t[DiscordEventType.Global]: true,\r\n\t\t[DiscordEventType.Conduit]: true,\r\n\t};\r\n\tprivate regex: RegExp;\r\n\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.regex = null;\r\n\t\tthis.props.logger.log.on(this.onLog.bind(this));\r\n\t\tthis.props.client\r\n\t\t\t.on('channelCreate', (chan: Discord.Channel) => this.logMessage(`Channel [ ${chan.id} ] created`, DiscordEventType.Channel))\r\n\t\t\t.on('channelDelete', (chan: Discord.Channel) => this.logMessage(`Channel [ ${chan.id} ] deleted`, DiscordEventType.Channel))\r\n\t\t\t.on('channelPinsUpdate', (chan: Discord.Channel, _) => this.logMessage(`Channel ${chan.id} ] pins updated`, DiscordEventType.Channel))\r\n\t\t\t.on('channelUpdate', (_, chan: Discord.Channel) => this.logMessage(`Channel [ ${chan.id} ] updated`, DiscordEventType.Channel))\r\n\r\n\t\t\t.on('emojiCreate', (emoji: Discord.Emoji) => this.logMessage(`Emoji [ ${emoji.id} ] created in guild [ ${emoji.guild.id} ]`, DiscordEventType.Emoji))\r\n\t\t\t.on('emojiDelete', (emoji: Discord.Emoji) => this.logMessage(`Emoji [ ${emoji.id} ] deleted in guild [ ${emoji.guild.id} ]`, DiscordEventType.Emoji))\r\n\t\t\t.on('emojiUpdate', (_, emoji: Discord.Emoji) => this.logMessage(`Emoji [ ${emoji.id} ] updated in guild [ ${emoji.guild.id} ]`, DiscordEventType.Emoji))\r\n\r\n\t\t\t.on('clientUserGuildSettingsUpdate', (settings: Discord.ClientUserGuildSettings) => this.logMessage(`Guild [ ${settings.guildID} ] settings updated`, DiscordEventType.Guild))\r\n\t\t\t.on('guildBanAdd', (guild: Discord.Guild, user: Discord.User) => this.logMessage(`Guild [ ${guild.id}} ] banned user [ ${user.id} ]`, DiscordEventType.Guild))\r\n\t\t\t.on('guildBanRemove', (guild: Discord.Guild, user: Discord.User) => this.logMessage(`Guild [ ${guild.id}} ] unbanned user [ ${user.id} ]`, DiscordEventType.Guild))\r\n\t\t\t.on('guildCreate', (guild: Discord.Guild) => this.logMessage(`Joined guild [ ${guild.id} ]`, DiscordEventType.Guild))\r\n\t\t\t.on('guildCached', (guildId: string, _: string) => this.logMessage(`Cached guild [ ${guildId} ]`, DiscordEventType.Emoji))\r\n\t\t\t.on('guildDelete', (guild: Discord.Guild) => this.logMessage(`Left guild [ ${guild.id} ]`, DiscordEventType.Guild))\r\n\t\t\t.on('guildUpdate', (_, guild: Discord.Guild) => this.logMessage(`Updated guild [ ${guild.id} ]`, DiscordEventType.Guild))\r\n\t\t\t.on('guildUnavailable', (guild: Discord.Guild) => this.logMessage(`Guild [ ${guild.id} ] became unavailable`, DiscordEventType.Guild))\r\n\t\t\t.on('guildIntegrationsUpdate', (guild: Discord.Guild) => this.logMessage(`Updated integration in guild [ ${guild.id} ]`, DiscordEventType.Guild))\r\n\t\t\t.on('guildMemberAdd', (member: Discord.GuildMember) => this.logMessage(`User [ ${member.id} ] joined guild [ ${member.guild.id} ]`, DiscordEventType.Guild))\r\n\t\t\t.on('guildMemberRemove', (member: Discord.GuildMember) => this.logMessage(`User [ ${member.id} ] left guild [ ${member.guild.id} ]`, DiscordEventType.Guild))\r\n\t\t\t.on('guildMemberUpdate', (_, member: Discord.GuildMember) => this.logMessage(`Updated user [ ${member.id} ] in guild [ ${member.guild.id} ]`, DiscordEventType.Guild))\r\n\t\t\t.on('roleCreate', (role: Discord.Role) => this.logMessage(`Created role [ ${role.id} ] in guild [ ${role.guild.id} ]`, DiscordEventType.Role))\r\n\t\t\t.on('roleDelete', (role: Discord.Role) => this.logMessage(`Deleted role [ ${role.id} ] in guild [ ${role.guild.id} ]`, DiscordEventType.Role))\r\n\t\t\t.on('roleUpdate', (role: Discord.Role) => this.logMessage(`Updated role [ ${role.id} ] in guild [ ${role.guild.id} ]`, DiscordEventType.Role))\r\n\r\n\t\t\t.on('ready', () => this.logMessage('Ready', DiscordEventType.Global))\r\n\t\t\t.on('loggedIn', this.onLoggedIn.bind(this))\r\n\t\t\t.on('reconnecting', () => this.logMessage('Reconnecting', DiscordEventType.Global, LogType.WARN))\r\n\t\t\t.on('resume', (n) => this.logMessage(`Resumed websocket connection with ${n} events replayed`, DiscordEventType.Global))\r\n\t\t\t.on('warn', (msg: string) => this.logMessage(msg, DiscordEventType.Global, LogType.WARN))\r\n\t\t\t.on('error', (err: Error) => this.logMessage(err.message, DiscordEventType.Global, LogType.DANGER))\r\n\t\t\t.on('rateLimit', (rateLimit: Discord.RateLimitInfo) => this.logMessage(`Triggered rate-limit [ ${rateLimit.path} ]`, DiscordEventType.Global, LogType.WARN));\r\n\t}\r\n\r\n\tprivate onLog(logEventArgs: LogEventArgs) {\r\n\t\tthis.logMessage(logEventArgs.message, DiscordEventType.Conduit, logEventArgs.type);\r\n\t}\r\n\r\n\tprivate logMessage(msg: string, eventType: DiscordEventType, logType?: LogType): void {\r\n\t\tif (!this.enabledEvents[eventType]) return;\r\n\t\tif (this.regex && !this.regex.test(msg)) return;\r\n\r\n\t\tlet timestamp: string = new Date().toLocaleTimeString();\r\n\t\tlet time: HTMLSpanElement = document.createElement('span');\r\n\t\ttime.style.color = 'orange';\r\n\t\ttime.textContent = timestamp;\r\n\r\n\t\tlet line: HTMLDivElement = document.createElement('div');\r\n\t\tline.appendChild(time);\r\n\t\tline.append(` | ${msg}`);\r\n\t\tif (logType === LogType.DANGER) {\r\n\t\t\tline.style.backgroundColor = 'rgba(200,0,0,0.5)';\r\n\t\t\tline.style.color = 'red';\r\n\t\t} else if (logType === LogType.WARN) {\r\n\t\t\tline.style.backgroundColor = 'rgba(200,140,0,0.5)';\r\n\t\t\tline.style.color = 'yellow';\r\n\t\t}\r\n\r\n\t\tlet terminal: HTMLElement = document.getElementById('console');\r\n\t\tterminal.appendChild(line);\r\n\t\tterminal.scrollTo(0, terminal.scrollHeight);\r\n\t}\r\n\r\n\tprivate onLoggedIn(): void {\r\n\t\tif (this.props.client.guilds.size >= 2500) { // too many events to log\r\n\t\t\tlet checkboxeIds: Array<string> = [ 'log-guild', 'log-channel', 'log-role', 'log-emoji' ];\r\n\t\t\tfor (let id of checkboxeIds) {\r\n\t\t\t\tlet checkbox: HTMLInputElement = document.getElementById(id) as HTMLInputElement;\r\n\t\t\t\tif (!checkbox) continue;\r\n\t\t\t\tcheckbox.click();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate setEvent(eventType: DiscordEventType, state: boolean) {\r\n\t\tthis.enabledEvents[eventType] = state;\r\n\t}\r\n\r\n\tprivate onClear(): void {\r\n\t\tlet terminal: HTMLElement = document.getElementById('console');\r\n\t\twhile (terminal.firstChild) {\r\n\t\t\tterminal.removeChild(terminal.firstChild);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onRegexChange(pattern: string) {\r\n\t\tif (pattern) {\r\n\t\t\tthis.regex = new RegExp(pattern);\r\n\t\t} else {\r\n\t\t\tthis.regex = null;\r\n\t\t}\r\n\t}\r\n\r\n\trender(): JSX.Element {\r\n\t\treturn <div>\r\n\t\t\t<div className='row' style={{ padding: '5px' }}>\r\n\t\t\t\t<div className='col-md-2'>\r\n\t\t\t\t\t<button className='classic-btn' style={{ width: '100%' }} onClick={this.onClear.bind(this)}>Clear</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='col-md-2'>\r\n\t\t\t\t\t<Checkbox id='log-conduit'\r\n\t\t\t\t\t\tname='Conduit'\r\n\t\t\t\t\t\tdefaultValue={this.enabledEvents[DiscordEventType.Conduit]}\r\n\t\t\t\t\t\tonChange={(s: boolean) => this.setEvent(DiscordEventType.Conduit, s)} />\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<Checkbox id='log-global'\r\n\t\t\t\t\t\tname='Global'\r\n\t\t\t\t\t\tdefaultValue={this.enabledEvents[DiscordEventType.Global]}\r\n\t\t\t\t\t\tonChange={(s: boolean) => this.setEvent(DiscordEventType.Global, s)} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='col-md-2'>\r\n\t\t\t\t\t<Checkbox id='log-guild'\r\n\t\t\t\t\t\tname='Guild'\r\n\t\t\t\t\t\tdefaultValue={this.enabledEvents[DiscordEventType.Guild]}\r\n\t\t\t\t\t\tonChange={(s: boolean) => this.setEvent(DiscordEventType.Guild, s)} />\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<Checkbox id='log-channel'\r\n\t\t\t\t\t\tname='Channel'\r\n\t\t\t\t\t\tdefaultValue={this.enabledEvents[DiscordEventType.Channel]}\r\n\t\t\t\t\t\tonChange={(s: boolean) => this.setEvent(DiscordEventType.Channel, s)} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='col-md-2'>\r\n\t\t\t\t\t<Checkbox id='log-role'\r\n\t\t\t\t\t\tname='Role'\r\n\t\t\t\t\t\tdefaultValue={this.enabledEvents[DiscordEventType.Role]}\r\n\t\t\t\t\t\tonChange={(s: boolean) => this.setEvent(DiscordEventType.Role, s)} />\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<Checkbox id='log-emoji'\r\n\t\t\t\t\t\tname='Emoji'\r\n\t\t\t\t\t\tdefaultValue={this.enabledEvents[DiscordEventType.Emoji]}\r\n\t\t\t\t\t\tonChange={(s: boolean) => this.setEvent(DiscordEventType.Emoji, s)} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='col-md-4'>\r\n\t\t\t\t\t<Input id='log-regex' placeholder='regex filter...' onChange={this.onRegexChange.bind(this)} style={{ marginTop: '4px', marginBottom: '0px' }} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div id='console' />\r\n\t\t</div>;\r\n\t}\r\n}","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport * as Discord from 'discord.js';\r\n\r\nimport { ConduitProps } from '../../../utils/conduitProps';\r\nimport { Input } from '../../controls/input';\r\nimport { Select } from '../../controls/select';\r\nimport { GuildAvatar } from '../../controls/avatar/guildAvatar';\r\nimport { ActionReporter } from '../../../utils/actionReporter';\r\nimport { DashboardPanel } from '../dashboardPanel';\r\nimport { SelectHelper } from '../../../utils/selectHelper';\r\nimport { DashboardEmojis } from './dashboardEmojis';\r\nimport { DashboardChannels } from './dashboardChannels';\r\nimport { DashboardRoles } from './dashboardRoles';\r\nimport { RestClient } from '../../../http/restClient';\r\n\r\nexport class DashboardGuilds extends React.Component<ConduitProps, {}> {\r\n\tprivate selectedGuild: Discord.Guild;\r\n\tprivate reporter: ActionReporter;\r\n\tprivate restClient: RestClient;\r\n\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.selectedGuild = null;\r\n\t\tthis.reporter = new ActionReporter(this.props.client);\r\n\t\tthis.restClient = new RestClient(this.props.client);\r\n\t\tthis.props.client\r\n\t\t\t.on('ready', this.onReady.bind(this))\r\n\t\t\t.on('loggedIn', this.loadRegionSelect.bind(this))\r\n\t\t\t.on('guildCreate', this.onGuildCreate.bind(this))\r\n\t\t\t.on('guildCached', this.onGuildCached.bind(this))\r\n\t\t\t.on('guildDelete', this.onGuildDelete.bind(this))\r\n\t\t\t.on('guildUpdate', (_, g: Discord.Guild) => this.onGuildUpdate(g))\r\n\t\t\t.on('guildIntegrationsUpdate', this.onGuildUpdate.bind(this));\r\n\t}\r\n\r\n\tprivate loadRegionSelect(): void {\r\n\t\tthis.props.loader.load(this.props.client.fetchVoiceRegions())\r\n\t\t\t.then((regions: Discord.Collection<string, Discord.VoiceRegion>) => {\r\n\t\t\t\tlet opts: Array<JSX.Element> = regions.map((region: Discord.VoiceRegion) => <option key={region.id} value={region.id}>{region.name}</option>);\r\n\t\t\t\tReactDOM.render(<Select id='guild-region'\r\n\t\t\t\t\tdefaultValue={this.selectedGuild ? this.selectedGuild.region : null}\r\n\t\t\t\t\tonSelected={this.onGuildRegionChange.bind(this)}>\r\n\t\t\t\t\t{opts}\r\n\t\t\t\t</Select>, document.getElementById('container-guild-region'));\r\n\t\t\t\tlet select: HTMLElement = document.getElementById('parent-guild-region');\r\n\t\t\t\tselect.style.marginBottom = '0px';\r\n\t\t\t});\r\n\t}\r\n\r\n\tprivate addGuildsToDatalist(guilds: Array<Discord.Guild>): void {\r\n\t\tlet opts: Array<JSX.Element> = guilds.map((g: Discord.Guild) => <option key={g.id} value={g.id}>{g.name} [ {g.id} ]</option>);\r\n\t\tReactDOM.render(opts, document.getElementById('guilds'));\r\n\t}\r\n\r\n\tprivate initialize(guilds: Array<Discord.Guild>): void {\r\n\t\tthis.addGuildsToDatalist(guilds);\r\n\t\tthis.props.logger.success('Cached all guilds');\r\n\t\tif (!this.selectedGuild) {\r\n\t\t\tthis.selectedGuild = guilds[0];\r\n\t\t\tthis.updateGuildInfo();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onReady(): void {\r\n\t\tlet guilds: Array<Discord.Guild> = [];\r\n\t\tif (this.props.client.shard) {\r\n\t\t\tthis.props.client.shard.broadcastEval('this.guilds')\r\n\t\t\t\t.then((res: any) => {\r\n\t\t\t\t\tfor (let i = 0; i < res.length; i++) {\r\n\t\t\t\t\t\tlet gs: Discord.Collection<string, Discord.Guild> = res[i] as Discord.Collection<string, Discord.Guild>;\r\n\t\t\t\t\t\tguilds = guilds.concat(gs.map((g: Discord.Guild) => g));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.initialize(guilds);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((err: Error) => this.props.logger.error(err.message));\r\n\t\t} else {\r\n\t\t\tguilds = this.props.client.guilds.map((g: Discord.Guild) => g);\r\n\t\t\tthis.initialize(guilds);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onGuildCreate(guild: Discord.Guild): void {\r\n\t\tlet guilds: HTMLDataListElement = document.getElementById('guilds') as HTMLDataListElement;\r\n\t\tlet opt: HTMLOptionElement = document.createElement('option');\r\n\t\topt.value = guild.id;\r\n\t\topt.text = `${guild.name} [ ${guild.id} ]`;\r\n\t\tguilds.appendChild(opt);\r\n\t}\r\n\r\n\tprivate onGuildCached(guildId: string, guildName: string): void {\r\n\t\tlet guilds: HTMLDataListElement = document.getElementById('guilds') as HTMLDataListElement;\r\n\t\tlet opt: HTMLOptionElement = document.createElement('option');\r\n\t\topt.value = guildId;\r\n\t\topt.text = `${guildName} [ ${guildId} ]`;\r\n\t\tguilds.appendChild(opt);\r\n\t}\r\n\r\n\tprivate getGuildOptionNode(datalist: HTMLDataListElement, guildId: string): Node {\r\n\t\tif (this.props.client.guilds.size < 2500) { // This operation is too laggy for over 2500 guilds bots\r\n\t\t\tfor (let child of datalist.childNodes) {\r\n\t\t\t\tlet opt: HTMLOptionElement = child as HTMLOptionElement;\r\n\t\t\t\tif (opt.value === guildId) {\r\n\t\t\t\t\treturn opt;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tprivate onGuildDelete(guild: Discord.Guild): void {\r\n\t\tlet guilds: HTMLDataListElement = document.getElementById('guilds') as HTMLDataListElement;\r\n\t\tlet node: Node = this.getGuildOptionNode(guilds, guild.id);\r\n\t\tif (node) {\r\n\t\t\tguilds.removeChild(node);\r\n\t\t}\r\n\r\n\t\tif (this.selectedGuild && guild.id === this.selectedGuild.id) {\r\n\t\t\tthis.selectedGuild = this.props.client.guilds.first();\r\n\t\t\tthis.updateGuildInfo();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onGuildUpdate(guild: Discord.Guild): void {\r\n\t\tlet guilds: HTMLDataListElement = document.getElementById('guilds') as HTMLDataListElement;\r\n\t\tlet node: Node = this.getGuildOptionNode(guilds, guild.id);\r\n\t\tif (node) {\r\n\t\t\tnode.textContent = `${guild.name} [ ${guild.id} ]`;\r\n\t\t}\r\n\r\n\t\tif (this.selectedGuild && guild.id === this.selectedGuild.id) {\r\n\t\t\tthis.selectedGuild = guild;\r\n\t\t\tthis.updateGuildInfo(false);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate async tryFindGuild(id: string): Promise<Discord.Guild> {\r\n\t\tlet guild: Discord.Guild = null;\r\n\t\tif (this.props.client.guilds.has(id)) {\r\n\t\t\tguild = this.props.client.guilds.get(id);\r\n\t\t\tif (guild.available) return guild;\r\n\t\t}\r\n\r\n\t\tguild = await this.restClient.fetchGuild(id);\r\n\t\tif (guild) {\r\n\t\t\tthis.props.client.guilds.set(guild.id, guild);\r\n\t\t\treturn guild;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tprivate updateGuildInfo(updateSubPanels: boolean = true): void {\r\n\t\tlet guildAvatar: HTMLElement = document.getElementById('container-guild-avatar');\r\n\t\tlet guildName: HTMLInputElement = document.getElementById('guild-name') as HTMLInputElement;\r\n\t\tlet guildChannelContainer: HTMLElement = document.getElementById('container-guild-channel');\r\n\t\tlet guildEmojisContainer: HTMLElement = document.getElementById('container-guild-emojis');\r\n\t\tlet guildRolesContainer: HTMLElement = document.getElementById('container-guild-roles');\r\n\t\tif (!guildAvatar || !guildName || !guildChannelContainer || !guildEmojisContainer || !guildRolesContainer) return;\r\n\r\n\t\tif (!this.selectedGuild) {\r\n\t\t\tguildName.value = '';\r\n\t\t\tReactDOM.render(<div />, guildAvatar);\r\n\t\t\tReactDOM.render(<div />, guildChannelContainer);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tguildName.value = this.selectedGuild.name;\r\n\t\tSelectHelper.trySetValue('guild-region', this.selectedGuild.region);\r\n\r\n\t\tReactDOM.render(<GuildAvatar id='guild-avatar' reporter={this.reporter} guild={this.selectedGuild} client={this.props.client}\r\n\t\t\tlogger={this.props.logger} loader={this.props.loader} />, guildAvatar);\r\n\r\n\t\tif (updateSubPanels) {\r\n\t\t\tReactDOM.render(<DashboardChannels guild={this.selectedGuild} client={this.props.client} restClient={this.restClient}\r\n\t\t\t\tonLayoutInvalidated={this.updateGuildInfo.bind(this)} logger={this.props.logger} loader={this.props.loader} reporter={this.reporter} />, guildChannelContainer);\r\n\r\n\t\t\tReactDOM.render(<DashboardEmojis guild={this.selectedGuild} client={this.props.client} restClient={this.restClient}\r\n\t\t\t\tonLayoutInvalidated={this.updateGuildInfo.bind(this)} logger={this.props.logger} loader={this.props.loader} reporter={this.reporter} />, guildEmojisContainer);\r\n\r\n\t\t\tReactDOM.render(<DashboardRoles guild={this.selectedGuild} client={this.props.client} restClient={this.restClient}\r\n\t\t\t\tonLayoutInvalidated={this.updateGuildInfo.bind(this)} logger={this.props.logger} loader={this.props.loader} reporter={this.reporter} />, guildRolesContainer);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onGuildSelected(): void {\r\n\t\tlet guildSelect: HTMLInputElement = document.getElementById('guild-select') as HTMLInputElement;\r\n\t\tthis.props.loader.load(this.tryFindGuild(guildSelect.value))\r\n\t\t\t.then((guild: Discord.Guild) => {\r\n\t\t\t\tif (!guild || (guild && guild.deleted)) return;\r\n\r\n\t\t\t\tthis.props.logger.success(`Selected guild [ ${guild.id} ]`);\r\n\t\t\t\tthis.selectedGuild = guild;\r\n\t\t\t\tthis.updateGuildInfo();\r\n\t\t\t});\r\n\t}\r\n\r\n\tprivate hasPermissions(...perms: Array<Discord.PermissionResolvable>): boolean {\r\n\t\tif (this.selectedGuild) {\r\n\t\t\tlet botMember: Discord.GuildMember = this.selectedGuild.member(this.props.client.user);\r\n\t\t\tfor (let perm of perms) {\r\n\t\t\t\tif (!botMember.hasPermission(perm)) {\r\n\t\t\t\t\tthis.props.logger.error(`You do not have the '${perm}' permission for the selected guild`);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tthis.props.logger.error('Cannot check permissions for a nonexistent guild');\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate onGuildNameChange(): void {\r\n\t\tif (!this.selectedGuild) return;\r\n\r\n\t\tlet guildName: HTMLInputElement = document.getElementById('guild-name') as HTMLInputElement;\r\n\t\tif (guildName.value && this.hasPermissions('MANAGE_GUILD')) {\r\n\t\t\tlet oldName: string = this.selectedGuild.name;\r\n\t\t\tthis.props.loader.load(this.selectedGuild.setName(guildName.value))\r\n\t\t\t\t.then((g: Discord.Guild) => {\r\n\t\t\t\t\tthis.props.logger.success(`Changed selected guild's name to ${g.name}`);\r\n\t\t\t\t\tthis.reporter.reportGuildAction(`Changed guild\\'s name [ \\`${oldName}\\` -> \\`${g.name}\\` ]`, this.selectedGuild);\r\n\t\t\t\t})\r\n\t\t\t\t.catch(_ => guildName.value = this.selectedGuild.name);\r\n\t\t} else {\r\n\t\t\tguildName.value = this.selectedGuild.name;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onGuildRegionChange(): void {\r\n\t\tif (!this.selectedGuild) return;\r\n\r\n\t\tlet guildRegion: HTMLSelectElement = document.getElementById('guild-region') as HTMLSelectElement;\r\n\t\tif (guildRegion.value && this.hasPermissions('MANAGE_GUILD')) {\r\n\t\t\tlet oldRegion: string = this.selectedGuild.region;\r\n\t\t\tthis.props.loader.load(this.selectedGuild.setRegion(guildRegion.value))\r\n\t\t\t\t.then((g: Discord.Guild) => {\r\n\t\t\t\t\tthis.props.logger.success(`Changed selected guild's region to ${g.region}`);\r\n\t\t\t\t\tthis.reporter.reportGuildAction(`Changed guild\\'s voice region [ \\`${oldRegion}\\` -> \\`${g.region}\\` ]`, this.selectedGuild);\r\n\t\t\t\t})\r\n\t\t\t\t.catch(_ => guildRegion.value = this.selectedGuild.region);\r\n\t\t} else {\r\n\t\t\tguildRegion.value = this.selectedGuild.region;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onLeaveGuild(): void {\r\n\t\tif (!this.selectedGuild) return;\r\n\r\n\t\tthis.props.loader.load(this.selectedGuild.leave())\r\n\t\t\t.then(_ => {\r\n\t\t\t\tthis.props.logger.success('Left selected guild');\r\n\t\t\t\tthis.selectedGuild = this.props.client.guilds.first();\r\n\t\t\t\tthis.updateGuildInfo();\r\n\t\t\t});\r\n\t}\r\n\r\n\tprivate onDeleteGuild(): void {\r\n\t\tif (!this.selectedGuild) return;\r\n\r\n\t\tthis.props.loader.load(this.selectedGuild.delete())\r\n\t\t\t.then(_ => {\r\n\t\t\t\tthis.reporter.reportGuildAction('Deleted guild', this.selectedGuild);\r\n\t\t\t\tthis.props.logger.success('Deleted selected guild');\r\n\t\t\t\tthis.selectedGuild = this.props.client.guilds.first();\r\n\t\t\t\tthis.updateGuildInfo();\r\n\t\t\t});\r\n\t}\r\n\r\n\trender(): JSX.Element {\r\n\t\treturn <div>\r\n\t\t\t<div style={{ padding: '10px', paddingBottom: '0' }}>\r\n\t\t\t\t<div className='row'>\r\n\t\t\t\t\t<div className='col-md-12'>\r\n\t\t\t\t\t\t<Input id='guild-select' onValidated={this.onGuildSelected.bind(this)} placeholder='guild name or id...' list='guilds' />\r\n\t\t\t\t\t\t<datalist id='guilds' />\r\n\t\t\t\t\t\t<hr style={{ marginBottom: '10px' }} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='row'>\r\n\t\t\t\t\t<div className='col-md-2 guild-avatar'>\r\n\t\t\t\t\t\t<div id='container-guild-avatar' />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='col-md-4'>\r\n\t\t\t\t\t\t<Input id='guild-name' onValidated={this.onGuildNameChange.bind(this)} placeholder='name...' />\r\n\t\t\t\t\t\t<div id='container-guild-region' />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='col-md-3'>\r\n\t\t\t\t\t\t<button style={{ marginBottom: '5px' }} className='purple-btn small-btn'>Members</button>\r\n\t\t\t\t\t\t<button className='purple-btn small-btn'>Bans</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='col-md-3'>\r\n\t\t\t\t\t\t<button className='red-btn small-btn' onClick={this.onLeaveGuild.bind(this)} style={{ marginBottom: '5px' }}>\r\n\t\t\t\t\t\t\tLeave\r\n\t\t\t\t</button>\r\n\t\t\t\t\t\t<button className='red-btn small-btn' onClick={this.onDeleteGuild.bind(this)}>\r\n\t\t\t\t\t\t\tDelete\r\n\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<DashboardPanel title='CHANNELS' foldable={true} style={{ marginTop: '10px' }}>\r\n\t\t\t\t<div id='container-guild-channel' />\r\n\t\t\t</DashboardPanel>\r\n\t\t\t<DashboardPanel title='EMOJIS' foldable={true} style={{ marginTop: '0px' }}>\r\n\t\t\t\t<div id='container-guild-emojis' />\r\n\t\t\t</DashboardPanel>\r\n\t\t\t<DashboardPanel title='ROLES' foldable={true} style={{ marginTop: '0px' }}>\r\n\t\t\t\t<div id='container-guild-roles' />\r\n\t\t\t</DashboardPanel>\r\n\t\t</div>;\r\n\t}\r\n}","import * as Discord from 'discord.js';\r\n\r\nimport { Avatar, AvatarProps } from './avatar';\r\nimport { HttpClient, HttpResult } from '../../../http/httpClient';\r\nimport { ActionReporter } from '../../../utils/actionReporter';\r\n\r\nexport interface GuildAvatarProps extends AvatarProps {\r\n\tguild: Discord.Guild;\r\n\treporter: ActionReporter;\r\n}\r\n\r\nexport class GuildAvatar extends Avatar<GuildAvatarProps> {\r\n\tprivate httpClient: HttpClient;\r\n\r\n\tconstructor(props: GuildAvatarProps) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.httpClient = new HttpClient();\r\n\t\tthis.props.client.on('guildUpdate', (_, guild: Discord.Guild) => {\r\n\t\t\tif (guild.id !== this.props.guild.id) return;\r\n\t\t\tthis.updateAvatar(guild);\r\n\t\t});\r\n\t}\r\n\r\n\tprivate updateAvatar(guild: Discord.Guild): void {\r\n\t\tlet avatar: HTMLElement = document.getElementById(this.props.id);\r\n\t\tlet img: HTMLImageElement = avatar.getElementsByTagName('img')[0];\r\n\t\tlet alt: HTMLSpanElement = avatar.getElementsByTagName('span')[0];\r\n\r\n\t\tif (guild.name) {\r\n\t\t\talt.textContent = guild.name.split(' ').map((p: string) => p[0]).join('');\r\n\t\t} else {\r\n\t\t\talt.textContent = '?';\r\n\t\t}\r\n\r\n\t\tif (guild.iconURL) {\r\n\t\t\timg.style.display = 'block';\r\n\t\t\timg.src = `https://cdn.discordapp.com/icons/${guild.id}/${guild.icon}.png`;\r\n\t\t\talt.style.display = 'none';\r\n\t\t} else {\r\n\t\t\timg.style.display = 'none';\r\n\t\t\talt.style.display = 'block';\r\n\t\t}\r\n\t}\r\n\r\n\tprotected onValidated(fileType: string, base64: string): void {\r\n\t\tlet botMember: Discord.GuildMember = this.props.guild.member(this.props.client.user);\r\n\t\tif (!botMember.hasPermission('MANAGE_GUILD')) {\r\n\t\t\tthis.props.logger.error(`You do not have the 'MANAGE_GUILD' permission for the guild [ ${this.props.guild.id} ]`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet body: string = JSON.stringify({\r\n\t\t\ticon: `data:${fileType};base64,${base64}`,\r\n\t\t});\r\n\t\tthis.props.loader.load(this.httpClient.patch(`https://discordapp.com/api/guilds/${this.props.guild.id}`, body, {\r\n\t\t\t'Authorization': `Bot ${this.props.client.token}`,\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t})).then((res: HttpResult) => {\r\n\t\t\tif (res.isSuccess()) {\r\n\t\t\t\tthis.props.logger.success('New guild icon set');\r\n\t\t\t\tthis.props.reporter.reportGuildAction('Changed guild\\'s avatar', this.props.guild);\r\n\t\t\t} else {\r\n\t\t\t\tlet obj = res.asObject<{ message?: string }>();\r\n\t\t\t\tif (obj.message) {\r\n\t\t\t\t\tthis.props.logger.error(obj.message);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.props.logger.error('Could not set new guild icon');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tcomponentDidUpdate(): void {\r\n\t\tthis.updateAvatar(this.props.guild);\r\n\t}\r\n\r\n\tcomponentDidMount(): void {\r\n\t\tthis.updateAvatar(this.props.guild);\r\n\t}\r\n}","import * as Discord from 'discord.js';\r\n\r\nexport class ActionReporter {\r\n\tprivate client: Discord.Client;\r\n\r\n\tconstructor(client: Discord.Client) {\r\n\t\tthis.client = client;\r\n\t}\r\n\r\n\tpublic formatChannel(chan: Discord.GuildChannel): string {\r\n\t\tif (!chan) return '';\r\n\r\n\t\tif (chan.type === 'category') {\r\n\t\t\treturn `category \\`${chan.name}\\` (**${chan.id}**)`;\r\n\t\t} else {\r\n\t\t\treturn `channel \\`${chan.name} [ ${chan.type} ]\\` (**${chan.id}**)`;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate async getGuildOwner(guild: Discord.Guild): Promise<Discord.GuildMember> {\r\n\t\tif (guild.members.has(guild.ownerID)) {\r\n\t\t\treturn guild.members.get(guild.ownerID);\r\n\t\t}\r\n\r\n\t\treturn await guild.fetchMember(guild.ownerID, true);\r\n\t}\r\n\r\n\tprivate async getUser(userId: string): Promise<Discord.User> {\r\n\t\tif (this.client.users.has(userId)) {\r\n\t\t\treturn this.client.users.get(userId);\r\n\t\t}\r\n\r\n\t\treturn await this.client.fetchUser(userId, true);\r\n\t}\r\n\r\n\tprivate notifyGuild(guild: Discord.Guild, embed: Discord.RichEmbed): void {\r\n\t\tif (guild.systemChannel && guild.systemChannel.permissionsFor(this.client.user).has('SEND_MESSAGES')) {\r\n\t\t\tlet chan: Discord.TextChannel = guild.systemChannel as Discord.TextChannel;\r\n\t\t\tchan.send(`<@!${guild.ownerID}>`, embed);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate notifyGuildOwner(guild: Discord.Guild, embed: Discord.RichEmbed): void {\r\n\t\tthis.getGuildOwner(guild)\r\n\t\t\t.then((owner: Discord.GuildMember) => {\r\n\t\t\t\tif (!owner) {\r\n\t\t\t\t\tthis.notifyGuild(guild, embed);\r\n\t\t\t\t}\r\n\r\n\t\t\t\towner.createDM()\r\n\t\t\t\t\t.then((dmChannel: Discord.DMChannel) => {\r\n\t\t\t\t\t\tembed.addField('Guild', `\\`${guild.name}\\` (**${guild.id}**)`, false);\r\n\t\t\t\t\t\tdmChannel.send('', embed)\r\n\t\t\t\t\t\t\t.catch(_ => this.notifyGuild(guild, this.createEmbed(embed.fields[0].value)));\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(_ => this.notifyGuild(guild, embed));\r\n\t\t\t});\r\n\t}\r\n\r\n\tprivate notifyUser(userId: string, embed: Discord.RichEmbed): void {\r\n\t\tthis.getUser(userId)\r\n\t\t\t.then((user: Discord.User) => {\r\n\t\t\t\tif (!user) return;\r\n\t\t\t\tuser.createDM().then((dmChannel: Discord.DMChannel) => dmChannel.send('', embed));\r\n\t\t\t});\r\n\t}\r\n\r\n\tprivate createEmbed(action: string, addDescription = false): Discord.RichEmbed {\r\n\t\tlet embed: Discord.RichEmbed = new Discord.RichEmbed()\r\n\t\t\t.setTitle('Conduit Reporter')\r\n\t\t\t.setColor(0xB51235)\r\n\t\t\t.addField('Action Performed', action, true);\r\n\r\n\t\tif (addDescription) {\r\n\t\t\tembed.setDescription(`- Conduit is a system used by developers to manage their discord bots.\r\n\r\n\t\t\t- This message has been sent to you because changes were made to one of the servers / guilds you own.\r\n\r\n\t\t\t- You will receive this kind of message each time a server belonging to you is modified from our service, if you wish not to receive these messages anymore type \\`conduit-stop\\` in this channel.\r\n\r\n\t\t\t- If you have reasons to believe that someone is using **this bot** in a malicious way, we recommend you get rid of it in all of your servers / guilds and that you report it to our service / administrators.`);\r\n\t\t}\r\n\r\n\t\treturn embed;\r\n\t}\r\n\r\n\tpublic reportGuildAction(action: string, guild: Discord.Guild): void {\r\n\t\tif (action.length > 1024) {\r\n\t\t\taction = `${action.slice(0, 1000)}...`;\r\n\t\t}\r\n\r\n\t\tlet embed: Discord.RichEmbed = this.createEmbed(action);\r\n\t\tthis.notifyGuildOwner(guild, embed);\r\n\t}\r\n\r\n\tpublic reportAction(action: string, userId: string): void {\r\n\t\tif (action.length > 1024) {\r\n\t\t\taction = `${action.slice(0, 1000)}...`;\r\n\t\t}\r\n\r\n\t\tlet embed: Discord.RichEmbed = this.createEmbed(action);\r\n\t\tthis.notifyUser(userId, embed);\r\n\t}\r\n}","import * as React from 'react';\r\nimport * as Discord from 'discord.js';\r\n\r\nimport { ConduitGuildSubPanelProps } from \"../../../utils/conduitProps\";\r\nimport { EmojiSelector } from '../../controls/emojiSelector';\r\nimport { Input } from '../../controls/input';\r\n\r\nexport class DashboardEmojis extends React.Component<ConduitGuildSubPanelProps, {}> {\r\n\tprivate selectedEmoji: Discord.Emoji;\r\n\r\n\tprivate onEmojiChange(emoji: Discord.Emoji): void {\r\n\t\tif (!emoji) return;\r\n\r\n\t\tthis.selectedEmoji = emoji;\r\n\t\tlet input: HTMLInputElement = document.getElementById('emoji-name') as HTMLInputElement;\r\n\t\tif (!input) return;\r\n\r\n\t\tinput.value = emoji.name;\r\n\t}\r\n\r\n\tprivate onEmojiNameChange(): void {\r\n\t\tif (!this.isCurrentEmojiValid()) return;\r\n\r\n\t\tlet input: HTMLInputElement = document.getElementById('emoji-name') as HTMLInputElement;\r\n\t\tif (input.value) {\r\n\t\t\tif (this.selectedEmoji.deletable) {\r\n\t\t\t\tlet oldName: string = this.selectedEmoji.name;\r\n\t\t\t\tthis.props.loader.load(this.selectedEmoji.setName(input.value))\r\n\t\t\t\t\t.then((e: Discord.Emoji) => {\r\n\t\t\t\t\t\tinput.value = e.name;\r\n\t\t\t\t\t\tthis.props.logger.success('Successfully changed the name of the selected emoji');\r\n\t\t\t\t\t\tthis.props.reporter.reportGuildAction(`Changed emoji \\`${e.name}\\` (**${e.id}**)'s name [ \\`${oldName}\\` -> \\`${e.name}]\\``, this.props.guild);\r\n\t\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis.props.logger.error('You do not have the \\'MANAGE_EMOJIS\\' permission in the selected guild');\r\n\t\t\t\tinput.value = this.selectedEmoji.name;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tinput.value = this.selectedEmoji.name;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onEmojiDelete(): void {\r\n\t\tif (!this.isCurrentEmojiValid()) return;\r\n\r\n\t\tif (this.selectedEmoji.deletable) {\r\n\t\t\tthis.props.loader.load(this.props.guild.deleteEmoji(this.selectedEmoji))\r\n\t\t\t\t.then(_ => {\r\n\t\t\t\t\tthis.props.logger.success('Successfully deleted the selected emoji');\r\n\t\t\t\t\tthis.props.reporter.reportGuildAction(`Deleted emoji \\`${this.selectedEmoji.name}\\` (**${this.selectedEmoji.id}**)`, this.props.guild);\r\n\t\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.props.logger.error('You do not have the \\'MANAGE_EMOJIS\\' permission in the selected guild');\r\n\t\t}\r\n\t}\r\n\r\n\tprivate isCurrentEmojiValid(): boolean {\r\n\t\tif (!this.selectedEmoji) return false;\r\n\t\tif (this.selectedEmoji.deleted) return false;\r\n\r\n\t\treturn this.selectedEmoji.guild.id === this.props.guild.id;\r\n\t}\r\n\r\n\trender(): JSX.Element {\r\n\t\treturn <div style={{ padding: '10px', paddingBottom: '5px' }}>\r\n\t\t\t<div className='row'>\r\n\t\t\t\t<div className='col-md-12'>\r\n\t\t\t\t\t<EmojiSelector id='guild-emojis' guild={this.props.guild} onEmojiSelectedUpdate={this.onEmojiChange.bind(this)}\r\n\t\t\t\t\t\tonSelected={this.onEmojiChange.bind(this)} client={this.props.client} logger={this.props.logger} loader={this.props.loader} />\r\n\t\t\t\t\t<hr style={{ marginBottom: '10px' }} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='row'>\r\n\t\t\t\t<div className='col-md-9'>\r\n\t\t\t\t\t<Input id='emoji-name' onValidated={this.onEmojiNameChange.bind(this)} placeholder='name...' />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='col-md-3'>\r\n\t\t\t\t\t<button className='red-btn small-btn' onClick={this.onEmojiDelete.bind(this)}>Delete</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>;\r\n\t}\r\n}","import * as React from 'react';\r\nimport * as Discord from 'discord.js';\r\n\r\nimport { ConduitProps } from '../../utils/conduitProps';\r\n\r\nexport interface EmojiSelectorProps extends ConduitProps {\r\n\tid: string;\r\n\tguild: Discord.Guild;\r\n\tonEmojiSelectedUpdate?: (emoji: Discord.Emoji) => void;\r\n\thideSelected?: boolean;\r\n\tonSelected: (emoji: Discord.Emoji) => void;\r\n}\r\n\r\nexport class EmojiSelector extends React.Component<EmojiSelectorProps, {}> {\r\n\tprivate selectedEmoji: Discord.Emoji;\r\n\r\n\tconstructor (props: EmojiSelectorProps) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.selectedEmoji = null;\r\n\t\tprops.client\r\n\t\t\t.on('emojiCreate', this.onEmojiCreate.bind(this))\r\n\t\t\t.on('emojiUpdate', (_, emoji: Discord.Emoji) => this.onEmojiUpdate(emoji))\r\n\t\t\t.on('emojiDelete', this.onEmojiDelete.bind(this));\r\n\r\n\t}\r\n\r\n\tprivate onEmojiCreate(emoji: Discord.Emoji): void {\r\n\t\tif (!this.isValidEmoji(emoji)) return;\r\n\r\n\t\tlet img: HTMLImageElement = this.findEmojiImage(emoji.id);\r\n\t\tif (img) return;\r\n\r\n\t\tlet selector: HTMLElement = document.getElementById(this.props.id);\r\n\t\timg = document.createElement('img');\r\n\t\timg.alt = emoji.name;\r\n\t\timg.src = emoji.url;\r\n\t\timg.title = emoji.toString();\r\n\t\timg.id = emoji.id;\r\n\t\timg.onclick = _ => {\r\n\t\t\tif (!this.props.hideSelected) {\r\n\t\t\t\tif (this.selectedEmoji) {\r\n\t\t\t\t\tlet oldImg: HTMLImageElement = this.findEmojiImage(this.selectedEmoji.id);\r\n\t\t\t\t\tif (oldImg) {\r\n\t\t\t\t\t\toldImg.style.border = 'none';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\timg.style.border = '3px solid #677bc4';\r\n\t\t\t}\r\n\r\n\t\t\tthis.selectedEmoji = emoji;\r\n\t\t\tthis.props.onSelected(this.selectedEmoji);\r\n\t\t};\r\n\t\tselector.appendChild(img);\r\n\t}\r\n\r\n\tprivate onEmojiUpdate(emoji: Discord.Emoji): void {\r\n\t\tif (!this.isValidEmoji(emoji)) return;\r\n\r\n\t\tlet img: HTMLImageElement = this.findEmojiImage(emoji.id);\r\n\t\tif (!img) return;\r\n\r\n\t\timg.alt = emoji.name;\r\n\t\timg.title = emoji.toString();\r\n\t\timg.src = emoji.url;\r\n\r\n\t\tif (emoji.id === this.selectedEmoji.id) {\r\n\t\t\tthis.selectedEmoji = emoji;\r\n\t\t\tif (this.props.onEmojiSelectedUpdate) {\r\n\t\t\t\tthis.props.onEmojiSelectedUpdate(emoji);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onEmojiDelete(emoji: Discord.Emoji): void {\r\n\t\tif (!this.isValidEmoji(emoji)) return;\r\n\r\n\t\tlet img: HTMLImageElement = this.findEmojiImage(emoji.id);\r\n\t\tif (!img) return;\r\n\r\n\t\tlet selector: HTMLElement = document.getElementById(this.props.id);\r\n\t\tselector.removeChild(img);\r\n\t}\r\n\r\n\tprivate isValidEmoji(emoji: Discord.Emoji): boolean {\r\n\t\treturn this.isVisible() && emoji.guild.id === this.props.guild.id;\r\n\t}\r\n\r\n\tprivate isVisible(): boolean {\r\n\t\tif (document.getElementById(this.props.id)) return true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate findEmojiImage(emojiId: string): HTMLImageElement {\r\n\t\tlet selector: HTMLElement = document.getElementById(this.props.id);\r\n\t\tfor (let child of selector.children) {\r\n\t\t\tif (child.id === emojiId) {\r\n\t\t\t\treturn child as HTMLImageElement;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tprivate onClick(e: React.MouseEvent<HTMLImageElement, MouseEvent>): void {\r\n\t\tlet emojiId: string = e.currentTarget.id;\r\n\t\tlet emoji: Discord.Emoji = this.props.guild.emojis.find((e: Discord.Emoji) => e.id === emojiId);\r\n\t\tif (!emoji) return;\r\n\r\n\t\tif (!this.props.hideSelected) {\r\n\t\t\tif (this.selectedEmoji) {\r\n\t\t\t\tlet oldImg: HTMLImageElement = this.findEmojiImage(this.selectedEmoji.id);\r\n\t\t\t\tif (oldImg) {\r\n\t\t\t\t\toldImg.style.border = 'none';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\te.currentTarget.style.border = '3px solid #677bc4';\r\n\t\t}\r\n\r\n\t\tthis.selectedEmoji = emoji;\r\n\t\tthis.props.onSelected(this.selectedEmoji);\r\n\t}\r\n\r\n\tprivate renderEmojis(): Array<JSX.Element> {\r\n\t\tlet res: Array<JSX.Element> = [];\r\n\t\tif (!this.props.guild.emojis) {\r\n\t\t\treturn res;\r\n\t\t}\r\n\r\n\t\tlet selectedFirst: boolean = false;\r\n\t\tfor (let item of this.props.guild.emojis) {\r\n\t\t\tlet emoji: Discord.Emoji = item[1];\r\n\t\t\tif (emoji.deleted) continue;\r\n\r\n\t\t\tlet style: React.CSSProperties = {};\r\n\t\t\tif (!selectedFirst) {\r\n\t\t\t\tselectedFirst = true;\r\n\t\t\t\tthis.selectedEmoji = emoji;\r\n\t\t\t\tif (!this.props.hideSelected) {\r\n\t\t\t\t\tstyle.border = '3px solid #677bc4';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tres.push(<img key={emoji.id}\r\n\t\t\t\tid={emoji.id}\r\n\t\t\t\tsrc={emoji.url}\r\n\t\t\t\talt={emoji.name}\r\n\t\t\t\ttitle={emoji.toString()}\r\n\t\t\t\tonClick={this.onClick.bind(this)}\r\n\t\t\t\tstyle={style} />);\r\n\t\t}\r\n\r\n\t\tthis.props.onSelected(this.selectedEmoji);\r\n\t\treturn res;\r\n\t}\r\n\r\n\trender(): JSX.Element {\r\n\t\treturn <div id={this.props.id} className='emoji-selector'>\r\n\t\t\t{this.renderEmojis()}\r\n\t\t</div>\r\n\t}\r\n}","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport * as Discord from 'discord.js';\r\n\r\nimport { ConduitGuildSubPanelProps } from '../../../utils/conduitProps';\r\nimport { DashboardCategoryChannel } from '../channel/dashboardCategoryChannel';\r\nimport { DashboardTextChannel } from '../channel/dashboardTextChannel';\r\nimport { DashboardVoiceChannel } from '../channel/dashboardVoiceChannel';\r\nimport { Input } from '../../controls/input';\r\n\r\nexport class DashboardChannels extends React.Component<ConduitGuildSubPanelProps, {}> {\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.props.client\r\n\t\t\t.on('channelCreate', this.onChannelCreate.bind(this))\r\n\t\t\t.on('channelDelete', this.onChannelDelete.bind(this))\r\n\t\t\t.on('channelUpdate', (_, c: Discord.Channel) => this.onChannelUpdate(c));\r\n\t}\r\n\r\n\tprivate isValidChannel(chan: Discord.Channel): boolean {\r\n\t\tif (!this.props.guild) return false;\r\n\t\tif (chan.type === 'dm' || chan.type === 'group') return false;\r\n\t\tlet guildChan: Discord.GuildChannel = chan as Discord.GuildChannel;\r\n\t\treturn guildChan.guild.id === this.props.guild.id;\r\n\t}\r\n\r\n\tprivate onChannelCreate(chan: Discord.Channel): void {\r\n\t\tif (!this.isValidChannel(chan)) return;\r\n\r\n\t\tif (this.props.guild.channels.size === 1) {\r\n\t\t\tthis.props.onLayoutInvalidated();\r\n\t\t} else {\r\n\t\t\tlet guildChan: Discord.GuildChannel = chan as Discord.GuildChannel;\r\n\t\t\tlet opt: HTMLOptionElement = document.createElement('option');\r\n\t\t\topt.value = guildChan.id;\r\n\t\t\topt.textContent = `${guildChan.name} [ ${guildChan.id} ]`;\r\n\r\n\t\t\tlet datalist: HTMLElement = document.getElementById('guild-channels');\r\n\t\t\tdatalist.appendChild(opt);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate getChannelOptionNode(datalist: HTMLDataListElement, chanId: string): Node {\r\n\t\tfor (let child of datalist.childNodes) {\r\n\t\t\tlet opt: HTMLOptionElement = child as HTMLOptionElement;\r\n\t\t\tif (opt.value === chanId) {\r\n\t\t\t\treturn opt;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tprivate onChannelDelete(chan: Discord.Channel): void {\r\n\t\tif (!this.isValidChannel(chan)) return;\r\n\r\n\t\tif (this.props.guild.channels.size < 1) {\r\n\t\t\tthis.props.onLayoutInvalidated();\r\n\t\t} else {\r\n\t\t\tlet guildChan: Discord.GuildChannel = chan as Discord.GuildChannel;\r\n\t\t\tlet channels: HTMLDataListElement = document.getElementById('guild-channels') as HTMLDataListElement;\r\n\t\t\tlet node: Node = this.getChannelOptionNode(channels, guildChan.id);\r\n\t\t\tif (node) {\r\n\t\t\t\tchannels.removeChild(node);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onChannelUpdate(chan: Discord.Channel): void {\r\n\t\tif (!this.isValidChannel(chan)) return;\r\n\r\n\t\tlet guildChan: Discord.GuildChannel = chan as Discord.GuildChannel;\r\n\t\tlet channels: HTMLDataListElement = document.getElementById('guild-channels') as HTMLDataListElement;\r\n\t\tlet node: Node = this.getChannelOptionNode(channels, guildChan.id);\r\n\t\tif (node) {\r\n\t\t\tnode.textContent = `${guildChan.name} [ ${guildChan.type} | ${guildChan.id} ]`;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate loadChannel(chanId: string): void {\r\n\t\tlet chan: Discord.GuildChannel = this.props.guild.channels.get(chanId);\r\n\t\tlet container: HTMLElement = document.getElementById('channel');\r\n\t\tlet jsx: JSX.Element = <div />;\r\n\r\n\t\tif (!chan || (chan && chan.deleted)) {\r\n\t\t\tReactDOM.render(jsx, container);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tswitch (chan.type) {\r\n\t\t\tcase 'category':\r\n\t\t\t\tlet catChan: Discord.CategoryChannel = chan as Discord.CategoryChannel;\r\n\t\t\t\tjsx = <DashboardCategoryChannel reporter={this.props.reporter} channel={catChan} client={this.props.client}\r\n\t\t\t\t\tlogger={this.props.logger} loader={this.props.loader} onLayoutInvalidated={this.props.onLayoutInvalidated.bind(this)} />;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'store':\r\n\t\t\tcase 'news':\r\n\t\t\tcase 'text':\r\n\t\t\t\tlet txtChan: Discord.TextChannel = chan as Discord.TextChannel;\r\n\t\t\t\tjsx = <DashboardTextChannel reporter={this.props.reporter} channel={txtChan} client={this.props.client}\r\n\t\t\t\t\tlogger={this.props.logger} loader={this.props.loader} onLayoutInvalidated={this.props.onLayoutInvalidated.bind(this)} />;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'voice':\r\n\t\t\t\tlet voiceChan: Discord.VoiceChannel = chan as Discord.VoiceChannel;\r\n\t\t\t\tjsx = <DashboardVoiceChannel reporter={this.props.reporter} channel={voiceChan} client={this.props.client}\r\n\t\t\t\t\tlogger={this.props.logger} loader={this.props.loader} onLayoutInvalidated={this.props.onLayoutInvalidated.bind(this)} />;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\t// unknown channel type, typically new or unexpected channel types\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tReactDOM.render(jsx, container);\r\n\r\n\t\t// we do that so the id is set if the user didnt input anything\r\n\t\tlet input: HTMLInputElement = document.getElementById('guild-channel') as HTMLInputElement;\r\n\t\tif (input) {\r\n\t\t\tinput.value = chanId;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onChannelSelected(): void {\r\n\t\tlet input: HTMLInputElement = document.getElementById('guild-channel') as HTMLInputElement;\r\n\t\tif (input.value) {\r\n\t\t\tthis.loadChannel(input.value);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate renderChannels(): JSX.Element {\r\n\t\tlet chans: Discord.Collection<string, Discord.GuildChannel> = this.props.guild.channels.filter((c: Discord.GuildChannel) => !c.deleted);\r\n\t\tif (chans.size > 0) {\r\n\t\t\tlet opts: Array<JSX.Element> = chans.map((c: Discord.GuildChannel) => <option key={`${this.props.guild.id}_${c.id}`} value={c.id}>{c.name} [ {c.type} | {c.id} ]</option>);\r\n\r\n\t\t\treturn <div>\r\n\t\t\t\t<Input id='guild-channel' onValidated={this.onChannelSelected.bind(this)} placeholder='channel name or id...' list='guild-channels'/>\r\n\t\t\t\t<datalist id='guild-channels' >{opts}</datalist>\r\n\t\t\t\t<hr style={{ marginBottom: '0px' }} />\r\n\t\t\t</div>;\r\n\t\t} else {\r\n\t\t\treturn <div />;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate postRender(): void {\r\n\t\tlet input: HTMLInputElement = document.getElementById('guild-channel') as HTMLInputElement;\r\n\t\tif (input) {\r\n\t\t\tlet chans: Discord.Collection<string, Discord.GuildChannel> = this.props.guild.channels.filter((c: Discord.GuildChannel) => !c.deleted);\r\n\t\t\tif (chans.size > 0) {\r\n\t\t\t\tthis.loadChannel(chans.first().id);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tReactDOM.render(<div />, document.getElementById('channel'));\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidUpdate(): void {\r\n\t\tthis.postRender();\r\n\t}\r\n\r\n\tcomponentDidMount(): void {\r\n\t\tthis.postRender();\r\n\t}\r\n\r\n\trender(): JSX.Element {\r\n\t\treturn <div>\r\n\t\t\t<div style={{ padding: '10px', paddingBottom: '0px' }}>\r\n\t\t\t\t<div className='row'>\r\n\t\t\t\t\t<div className='col-md-12'>\r\n\t\t\t\t\t\t{this.renderChannels()}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div id='channel' style={{ padding: '5px', paddingBottom: '0px' }} />\r\n\t\t</div>;\r\n\t}\r\n}","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport * as Discord from 'discord.js';\r\n\r\nimport { ConduitChannelProps } from '../../../utils/conduitProps';\r\nimport { Input } from '../../controls/input';\r\nimport { ConduitEvent } from '../../../utils/conduitEvent';\r\nimport { Select } from '../../controls/select';\r\n\r\nexport class DashboardCategoryChannel extends React.Component<ConduitChannelProps<Discord.CategoryChannel>, {}> {\r\n\tprivate static registeredEvents: boolean = false;\r\n\r\n\tprivate onChannelDeletion: ConduitEvent<void>;\r\n\tprivate childrenChannels: Array<Discord.GuildChannel>;\r\n\tprivate nonChildrenChannels: Array<Discord.GuildChannel>;\r\n\r\n\tprivate category: Discord.CategoryChannel;\r\n\tprivate chanIdToRemove: string;\r\n\tprivate chanIdToAdd: string;\r\n\r\n\tconstructor(props: ConduitChannelProps<Discord.CategoryChannel>) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.onChannelDeletion = new ConduitEvent();\r\n\t\tthis.category = props.channel;\r\n\r\n\t\tif (props.onLayoutInvalidated) {\r\n\t\t\tthis.onChannelDeletion.on(props.onLayoutInvalidated);\r\n\t\t}\r\n\r\n\t\tif (!DashboardCategoryChannel.registeredEvents) {\r\n\t\t\tprops.client\r\n\t\t\t\t.on('channelDelete', this.onChannelDelete.bind(this))\r\n\t\t\t\t.on('channelUpdate', (_, c: Discord.Channel) => this.onChannelUpdate(c))\r\n\t\t\t\t.on('channelCreate', this.onChannelCreate.bind(this));\r\n\t\t\tDashboardCategoryChannel.registeredEvents = true;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onChannelDelete(c: Discord.Channel): void {\r\n\t\tif (this.isValidChannel(c) && c.id === this.category.id) {\r\n\t\t\tthis.onChannelDeletion.trigger();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onChannelUpdate(c: Discord.Channel): void {\r\n\t\tif (this.isValidChannel(c)) {\r\n\t\t\tif (c.id === this.category.id) {\r\n\t\t\t\tthis.category = c as Discord.CategoryChannel;\r\n\t\t\t\tthis.initialize();\r\n\t\t\t}\r\n\t\t\tthis.updateChannels();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onChannelCreate(c: Discord.Channel): void {\r\n\t\tif (this.isValidChannel(c)) {\r\n\t\t\tthis.updateChannels();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate isValidChannel(c: Discord.Channel) {\r\n\t\tif (!this.isVisible()) return false;\r\n\t\tif (c.type === 'dm' || c.type === 'group') return false;\r\n\t\tlet guildChan: Discord.GuildChannel = c as Discord.GuildChannel;\r\n\t\treturn guildChan.guild.id === this.category.guild.id;\r\n\t}\r\n\r\n\tprivate isVisible() {\r\n\t\tif (document.getElementById('category-channel')) return true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate updateChannels() {\r\n\t\tlet containerAdd: HTMLElement = document.getElementById('container-channel-not-children');\r\n\t\tlet containerRemove: HTMLElement = document.getElementById('container-channel-children');\r\n\t\tif (!containerAdd || !containerRemove) return;\r\n\r\n\t\tthis.childrenChannels = this.getChannels(true);\r\n\t\tthis.nonChildrenChannels = this.getChannels(false);\r\n\r\n\t\tlet chanToAdd: Discord.GuildChannel = this.nonChildrenChannels[0];\r\n\t\tlet chanToRemove: Discord.GuildChannel = this.childrenChannels[0];\r\n\r\n\t\tif (chanToAdd) {\r\n\t\t\tthis.chanIdToAdd = chanToAdd.id;\r\n\t\t\tlet opts: Array<JSX.Element> = this.nonChildrenChannels.map((c: Discord.GuildChannel) => <option key={`${this.category.id}_${c.id}`} value={c.id}>{c.name} [ {c.type} | {c.id} ]</option>);\r\n\r\n\t\t\tReactDOM.render(<div>\r\n\t\t\t\t<Select id='channel-not-children' onSelected={this.onChannelNotChildrenSelected.bind(this)}>{opts}</Select>\r\n\t\t\t\t<button style={{ marginTop: '5px', marginBottom: '5px' }} className='purple-btn small-btn' onClick={this.onChannelNonChildrenAdded.bind(this)}>\r\n\t\t\t\t\tAdd Channel\r\n\t\t\t\t</button>\r\n\t\t\t</div>, containerAdd);\r\n\r\n\t\t} else {\r\n\t\t\tthis.chanIdToAdd = null;\r\n\t\t\tReactDOM.render(<div />, containerAdd);\r\n\t\t}\r\n\r\n\t\tif (chanToRemove) {\r\n\t\t\tthis.chanIdToRemove = chanToRemove.id;\r\n\t\t\tlet opts: Array<JSX.Element> = this.childrenChannels.map((c: Discord.GuildChannel) => <option key={`${this.category.id}_${c.id}`} value={c.id}>{c.name} [ {c.type} | {c.id} ]</option>);\r\n\r\n\t\t\tReactDOM.render(<div>\r\n\t\t\t\t<Select id='channel-children' onSelected={this.onChannelChildrenSelected.bind(this)}>{opts}</Select>\r\n\t\t\t\t<button style={{ marginTop: '5px', marginBottom: '5px' }} className='purple-btn small-btn' onClick={this.onChannelChildrenRemoved.bind(this)}>\r\n\t\t\t\t\tRemove Channel\r\n\t\t\t\t</button>\r\n\t\t\t</div>, containerRemove);\r\n\t\t} else {\r\n\t\t\tthis.chanIdToRemove = null;\r\n\t\t\tReactDOM.render(<div />, containerRemove);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate getChannels(inCat: boolean): Array<Discord.GuildChannel> {\r\n\t\tlet res: Array<Discord.GuildChannel> = [];\r\n\t\tfor (let item of this.category.guild.channels) {\r\n\t\t\tlet chan: Discord.GuildChannel = item[1];\r\n\t\t\tif (chan.deleted || chan.type === 'category') continue;\r\n\t\t\tif (inCat) { // could be simplified but confusing to read\r\n\t\t\t\tif (chan.parentID === this.category.id) {\r\n\t\t\t\t\tres.push(chan);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (chan.parentID !== this.category.id) {\r\n\t\t\t\t\tres.push(chan);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn res;\r\n\t}\r\n\r\n\tprivate async deleteChildren(): Promise<void> {\r\n\t\tlet action: string = 'Deleted channels:\\n';\r\n\t\tfor (let item of this.category.children) {\r\n\t\t\tlet chan: Discord.GuildChannel = item[1];\r\n\t\t\tif (!chan.deletable || chan.deleted) continue;\r\n\r\n\t\t\ttry {\r\n\t\t\t\tawait chan.delete();\r\n\t\t\t\taction += `- ${this.props.reporter.formatChannel(chan)}\\n`;\r\n\t\t\t} catch (err) {\r\n\t\t\t\tthis.props.logger.error(`Could not delete channel [ ${chan.id} ]`)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.props.reporter.reportGuildAction(action, this.category.guild);\r\n\t}\r\n\r\n\tprivate onChannelNameChanged(): void {\r\n\t\tif (!this.isCurrentChannelValid()) return;\r\n\r\n\t\tlet input: HTMLInputElement = document.getElementById('channel-name') as HTMLInputElement;\r\n\t\tif (input.value) {\r\n\t\t\tif (!this.category.manageable) {\r\n\t\t\t\tthis.props.logger.error('You do not have the \\'MANAGE_CHANNEL\\' permission in the selected guild');\r\n\t\t\t\tinput.value = this.category.name;\r\n\t\t\t} else {\r\n\t\t\t\tlet oldName: string = this.category.name;\r\n\t\t\t\tthis.props.loader.load(this.category.setName(input.value))\r\n\t\t\t\t\t.then((c: Discord.CategoryChannel) => {\r\n\t\t\t\t\t\tthis.props.logger.success('Changed selected channel\\'s name');\r\n\t\t\t\t\t\tthis.props.reporter.reportGuildAction(`Changed ${this.props.reporter.formatChannel(c)}'s name [ \\`${oldName}\\` -> \\`${c.name}\\` ]`, c.guild);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(_ => input.value = this.category.name);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tinput.value = this.category.name;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onChannelDeleted(): void {\r\n\t\tif (!this.isCurrentChannelValid()) return;\r\n\r\n\t\tif (!this.category.deletable) {\r\n\t\t\tthis.props.logger.error('You do not have the \\'MANAGE_CHANNEL\\' permission in the selected guild');\r\n\t\t} else {\r\n\t\t\tthis.props.loader.load(this.category.delete())\r\n\t\t\t\t.then((c: Discord.CategoryChannel) => {\r\n\t\t\t\t\tthis.props.logger.success(`Deleted selected channel`);\r\n\t\t\t\t\tthis.onChannelDeletion.trigger();\r\n\t\t\t\t\tthis.props.reporter.reportGuildAction(`Deleted ${this.props.reporter.formatChannel(c)}`, c.guild);\r\n\t\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onChannelChildrenDeleted(): void {\r\n\t\tif (!this.isCurrentChannelValid()) return;\r\n\r\n\t\tthis.props.loader.load(this.deleteChildren())\r\n\t\t\t.then(() => {\r\n\t\t\t\tthis.props.loader.load(this.category.delete())\r\n\t\t\t\t\t.then((c: Discord.CategoryChannel) => {\r\n\t\t\t\t\t\tthis.props.logger.success(`Deleted selected channel`);\r\n\t\t\t\t\t\tthis.onChannelDeletion.trigger();\r\n\t\t\t\t\t\tthis.props.reporter.reportGuildAction(`Deleted ${this.props.reporter.formatChannel(c)}`, c.guild);\r\n\t\t\t\t\t});\r\n\t\t\t});\r\n\t}\r\n\r\n\tprivate onChannelChildrenSelected(chanId: string): void {\r\n\t\tthis.chanIdToRemove = chanId;\r\n\t}\r\n\r\n\tprivate onChannelNotChildrenSelected(chanId: string): void {\r\n\t\tthis.chanIdToAdd = chanId;\r\n\t}\r\n\r\n\tprivate onChannelChildrenRemoved(): void {\r\n\t\tif (!this.chanIdToRemove) return;\r\n\t\tif (!this.isCurrentChannelValid()) return;\r\n\r\n\t\tlet chan: Discord.GuildChannel = this.category.guild.channels.find((c: Discord.GuildChannel) => c.id === this.chanIdToRemove);\r\n\t\tif (!chan) return;\r\n\r\n\t\tif (chan.manageable) {\r\n\t\t\tthis.props.loader.load(chan.setParent(null))\r\n\t\t\t\t.then((c: Discord.GuildChannel) => {\r\n\t\t\t\t\tthis.updateChannels();\r\n\t\t\t\t\tthis.props.logger.success(`Successfully removed selected channel from category`);\r\n\t\t\t\t\tthis.props.reporter.reportGuildAction(`Moved ${this.props.reporter.formatChannel(c)} out of ${this.props.reporter.formatChannel(this.category)}`, this.category.guild);\r\n\t\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.props.logger.error('You do not have the \\'MANAGE_CHANNEL\\' permission in the selected guild');\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onChannelNonChildrenAdded(): void {\r\n\t\tif (!this.chanIdToAdd) return;\r\n\t\tif (!this.isCurrentChannelValid()) return;\r\n\r\n\t\tlet chan: Discord.GuildChannel = this.category.guild.channels.find((c: Discord.GuildChannel) => c.id === this.chanIdToAdd);\r\n\t\tif (!chan) return;\r\n\r\n\t\tif (chan.manageable) {\r\n\t\t\tthis.props.loader.load(chan.setParent(this.category))\r\n\t\t\t\t.then((c: Discord.GuildChannel) => {\r\n\t\t\t\t\tthis.updateChannels();\r\n\t\t\t\t\tthis.props.logger.success(`Successfully added selected channel to category`);\r\n\t\t\t\t\tthis.props.reporter.reportGuildAction(`Moved ${this.props.reporter.formatChannel(c)} to ${this.props.reporter.formatChannel(this.category)}`, this.category.guild);\r\n\t\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.props.logger.error('You do not have the \\'MANAGE_CHANNEL\\' permission in the selected guild');\r\n\t\t}\r\n\t}\r\n\r\n\tprivate isCurrentChannelValid(): boolean {\r\n\t\tif (!this.category) return false;\r\n\t\tif (this.category.deleted) return false;\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tprivate initialize(): void {\r\n\t\tlet nameInput: HTMLInputElement = document.getElementById('channel-name') as HTMLInputElement;\r\n\t\tnameInput.value = this.category.name;\r\n\t}\r\n\r\n\tcomponentDidMount(): void {\r\n\t\tthis.category = this.props.channel;\r\n\t\tthis.updateChannels();\r\n\t\tthis.initialize();\r\n\t}\r\n\r\n\tcomponentDidUpdate(): void {\r\n\t\tthis.category = this.props.channel;\r\n\t\tthis.updateChannels();\r\n\t\tthis.initialize();\r\n\t}\r\n\r\n\trender(): JSX.Element {\r\n\t\treturn <div id='category-channel'>\r\n\t\t\t<div className='row' style={{ padding: '5px' }}>\r\n\t\t\t\t<div className='col-md-3'>\r\n\t\t\t\t\t<Input id='channel-name' onValidated={this.onChannelNameChanged.bind(this)} placeholder='name...' />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='col-md-3' />\r\n\t\t\t\t<div className='col-md-3'>\r\n\t\t\t\t\t<button className='purple-btn large-btn'>Permissions</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='col-md-3'>\r\n\t\t\t\t\t<button style={{ marginBottom: '5px' }} className='red-btn small-btn' onClick={this.onChannelDeleted.bind(this)}>Delete Category</button>\r\n\t\t\t\t\t<button className='red-btn small-btn' onClick={this.onChannelChildrenDeleted.bind(this)}>Delete All</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='row' style={{ padding: '5px' }}>\r\n\t\t\t\t<div className='col-md-6'>\r\n\t\t\t\t\t<div id='container-channel-children' />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='col-md-6'>\r\n\t\t\t\t\t<div id='container-channel-not-children' />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>;\r\n\t}\r\n}","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport * as Discord from 'discord.js';\r\n\r\nimport { ConduitChannelProps } from '../../../utils/conduitProps';\r\nimport { Input } from '../../controls/input';\r\nimport { Checkbox } from '../../controls/checkbox';\r\nimport { ConduitEvent } from '../../../utils/conduitEvent';\r\nimport { HttpClient, HttpResult } from '../../../http/httpClient';\r\nimport { Select } from '../../controls/select';\r\nimport { SelectHelper } from '../../../utils/selectHelper';\r\n\r\nexport class DashboardTextChannel extends React.Component<ConduitChannelProps<Discord.TextChannel>, {}> {\r\n\tprivate static registeredEvents: boolean = false;\r\n\r\n\tprivate onChannelDeletion: ConduitEvent<void>;\r\n\tprivate httpClient: HttpClient;\r\n\tprivate channel: Discord.TextChannel;\r\n\r\n\tconstructor(props: ConduitChannelProps<Discord.TextChannel>) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.onChannelDeletion = new ConduitEvent();\r\n\t\tthis.httpClient = new HttpClient();\r\n\t\tthis.channel = props.channel;\r\n\t\tif (props.onLayoutInvalidated) {\r\n\t\t\tthis.onChannelDeletion.on(props.onLayoutInvalidated);\r\n\t\t}\r\n\r\n\t\tif (!DashboardTextChannel.registeredEvents) {\r\n\t\t\tprops.client\r\n\t\t\t\t.on('channelCreate', this.onChannelCreate.bind(this))\r\n\t\t\t\t.on('channelDelete', this.onChannelDelete.bind(this))\r\n\t\t\t\t.on('channelUpdate', (_, c: Discord.Channel) => this.onChannelUpdate(c));\r\n\t\t\tDashboardTextChannel.registeredEvents = true;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onChannelCreate(c: Discord.Channel): void {\r\n\t\tif (this.isValidChannel(c) && c.type === 'category') {\r\n\t\t\tlet cat: Discord.CategoryChannel = c as Discord.CategoryChannel;\r\n\t\t\tSelectHelper.tryAddValue('channel-parent', cat.id, `${cat.name} [ ${cat.id} ]`, this.onParentSelected.bind(this));\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onChannelDelete(c: Discord.Channel): void {\r\n\t\tif (this.isValidChannel(c)) {\r\n\t\t\tif (c.id === this.channel.id) {\r\n\t\t\t\tthis.onChannelDeletion.trigger();\r\n\t\t\t} else if (c.type === 'category') {\r\n\t\t\t\tSelectHelper.tryRemoveValue('channel-parent', c.id);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onChannelUpdate(c: Discord.Channel): void {\r\n\t\tif (this.isValidChannel(c)) {\r\n\t\t\tif (c.id === this.channel.id) {\r\n\t\t\t\tthis.channel = c as Discord.TextChannel;\r\n\t\t\t\tthis.initialize();\r\n\t\t\t} else if (c.type === 'category') {\r\n\t\t\t\tlet cat: Discord.CategoryChannel = c as Discord.CategoryChannel;\r\n\t\t\t\tSelectHelper.tryChangeOptionText('channel-parent', cat.id, `${cat.name} [ ${cat.id} ]`);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate isValidChannel(c: Discord.Channel): boolean {\r\n\t\tif (!this.isVisible()) return false;\r\n\t\tif (c.type === 'dm' || c.type === 'group') return false;\r\n\t\tlet guildChan: Discord.GuildChannel = c as Discord.GuildChannel;\r\n\t\treturn guildChan.guild.id === this.channel.guild.id;\r\n\t}\r\n\r\n\tprivate isVisible(): boolean {\r\n\t\tif (document.getElementById('text-channel')) return true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate onChannelNameChanged(): void {\r\n\t\tif (!this.isCurrentChannelValid()) return;\r\n\r\n\t\tlet input: HTMLInputElement = document.getElementById('channel-name') as HTMLInputElement;\r\n\t\tif (input.value) {\r\n\t\t\tif (!this.channel.manageable) {\r\n\t\t\t\tthis.props.logger.error('You do not have the \\'MANAGE_CHANNEL\\' permission in the selected guild');\r\n\t\t\t\tinput.value = this.channel.name;\r\n\t\t\t} else {\r\n\t\t\t\tlet oldName: string = this.channel.name;\r\n\t\t\t\tthis.props.loader.load(this.channel.setName(input.value))\r\n\t\t\t\t\t.then((c: Discord.TextChannel) => {\r\n\t\t\t\t\t\tthis.props.logger.success('Changed selected channel\\'s name');\r\n\t\t\t\t\t\tthis.props.reporter.reportGuildAction(`Changed ${this.props.reporter.formatChannel(c)}'s name [ \\`${oldName}\\` -> \\`${c.name}\\` ]`, c.guild);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(_ => input.value = this.channel.name);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tinput.value = this.channel.name;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onChannelTopicChanged(): void {\r\n\t\tif (!this.isCurrentChannelValid()) return;\r\n\r\n\t\tlet input: HTMLInputElement = document.getElementById('channel-topic') as HTMLInputElement;\r\n\t\tif (input.value) {\r\n\t\t\tif (!this.channel.manageable) {\r\n\t\t\t\tthis.props.logger.error('You do not have the \\'MANAGE_CHANNEL\\' permission in the selected guild');\r\n\t\t\t\tinput.value = this.channel.topic;\r\n\t\t\t} else {\r\n\t\t\t\tthis.props.loader.load(this.channel.setTopic(input.value))\r\n\t\t\t\t\t.then((c: Discord.TextChannel) => {\r\n\t\t\t\t\t\tthis.props.logger.success('Changed selected channel\\'s topic');\r\n\t\t\t\t\t\tthis.props.reporter.reportGuildAction(`Changed ${this.props.reporter.formatChannel(c)}'s topic`, c.guild);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(_ => input.value = this.channel.topic);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onChannelRateLimitChanged(): void {\r\n\t\tif (!this.isCurrentChannelValid()) return;\r\n\r\n\t\tlet input: HTMLInputElement = document.getElementById('channel-rate-limit') as HTMLInputElement;\r\n\t\tif (input.value) {\r\n\t\t\tif (!this.channel.manageable) {\r\n\t\t\t\tthis.props.logger.error('You do not have the \\'MANAGE_CHANNEL\\' permission in the selected guild');\r\n\t\t\t\tinput.value = this.channel.rateLimitPerUser > 0 ? `${this.channel.rateLimitPerUser}s` : '';\r\n\t\t\t} else {\r\n\t\t\t\tlet regex: RegExp = /^(\\d+)(\\s*s)?$/;\r\n\t\t\t\tlet matches: RegExpMatchArray = input.value.match(regex);\r\n\t\t\t\tif (matches && matches[1]) {\r\n\t\t\t\t\tlet limit: number = Number(matches[1]);\r\n\t\t\t\t\tlet oldLimit: number = this.channel.rateLimitPerUser;\r\n\t\t\t\t\tthis.props.loader.load(this.channel.setRateLimitPerUser(limit))\r\n\t\t\t\t\t\t.then((c: Discord.TextChannel) => {\r\n\t\t\t\t\t\t\tinput.value = c.rateLimitPerUser > 0 ? `${c.rateLimitPerUser}s` : '';\r\n\t\t\t\t\t\t\tthis.props.logger.success('Changed selected channel\\'s user rate-limit');\r\n\t\t\t\t\t\t\tthis.props.reporter.reportGuildAction(`Changed ${this.props.reporter.formatChannel(c)}'s user rate-limit [ \\`${oldLimit}s\\` -> \\`${c.rateLimitPerUser}s\\` ]`, c.guild);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch(_ => input.value = this.channel.rateLimitPerUser > 0 ? `${this.channel.rateLimitPerUser}s` : '');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tinput.value = this.channel.rateLimitPerUser > 0 ? `${this.channel.rateLimitPerUser}s` : '';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onChannelMessageSent(): void {\r\n\t\tif (!this.isCurrentChannelValid()) return;\r\n\t\tif (!this.channel.memberPermissions(this.props.client.user).has('SEND_MESSAGES')) {\r\n\t\t\tthis.props.logger.error(`You do not have the \\'SEND_MESSAGE\\' permission for the selected channel`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet input: HTMLInputElement = document.getElementById('channel-message') as HTMLInputElement;\r\n\t\tlet fileInput: HTMLInputElement = document.getElementById('channel-file') as HTMLInputElement;\r\n\t\tlet file: File = fileInput.files[0];\r\n\t\tif (file) {\r\n\t\t\tlet form: FormData = new FormData();\r\n\t\t\tform.append('file', file.slice(), file.name);\r\n\t\t\tif (input.value) {\r\n\t\t\t\tform.append('payload_json', JSON.stringify({ content: input.value, tts: false, embed: null }));\r\n\t\t\t}\r\n\r\n\t\t\tthis.props.loader.load(this.httpClient.post(`https://discordapp.com/api/channels/${this.channel.id}/messages`, form, {\r\n\t\t\t\t'Authorization': `Bot ${this.props.client.token}`,\r\n\t\t\t})).then((res: HttpResult) => {\r\n\t\t\t\tif (res.isSuccess) {\r\n\t\t\t\t\tthis.props.logger.success(`Successfully sent a message to the selected channel and guild`);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet obj = res.asObject<{ message?: string }>();\r\n\t\t\t\t\tif (obj.message) {\r\n\t\t\t\t\t\tthis.props.logger.error(obj.message);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.props.logger.error('Could not send a message to the selected channel and guild');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tinput.value = '';\r\n\t\t\t\tfileInput.value = '';\r\n\t\t\t});\r\n\t\t} else if (input.value) {\r\n\t\t\tthis.props.loader.load(this.channel.send(input.value))\r\n\t\t\t\t.then(_ => {\r\n\t\t\t\t\tthis.props.logger.success(`Successfully sent a message to the selected channel and guild`);\r\n\t\t\t\t\tinput.value = '';\r\n\t\t\t\t\tfileInput.value = '';\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate onChannelNsfwChanged(state: boolean): void {\r\n\t\tif (!this.isCurrentChannelValid()) return;\r\n\r\n\t\tlet input: HTMLInputElement = document.getElementById('channel-nsfw') as HTMLInputElement;\r\n\t\tif (!this.channel.manageable) {\r\n\t\t\tthis.props.logger.error('You do not have the \\'MANAGE_CHANNEL\\' permission in the selected guild');\r\n\t\t\tinput.checked = this.channel.nsfw;\r\n\t\t} else {\r\n\t\t\tlet oldNsfw: boolean = this.channel.nsfw;\r\n\t\t\tthis.props.loader.load(this.channel.setNSFW(state))\r\n\t\t\t\t.then((c: Discord.TextChannel) => {\r\n\t\t\t\t\tthis.props.logger.success(`Set selected channel\\'s nsfw state to ${state}`);\r\n\t\t\t\t\tthis.props.reporter.reportGuildAction(`Changed ${this.props.reporter.formatChannel(c)}'s nsfw state [ \\`${oldNsfw}\\` -> \\`${c.nsfw}\\` ]`, c.guild);\r\n\t\t\t\t})\r\n\t\t\t\t.catch(_ => {\r\n\t\t\t\t\tinput.checked = this.channel.nsfw;\r\n\t\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onChannelDeleted(): void {\r\n\t\tif (!this.isCurrentChannelValid()) return;\r\n\r\n\t\tif (!this.channel.deletable) {\r\n\t\t\tthis.props.logger.error('You do not have the \\'MANAGE_CHANNEL\\' permission in the selected guild');\r\n\t\t} else {\r\n\t\t\tthis.props.loader.load(this.channel.delete())\r\n\t\t\t\t.then((c: Discord.GuildChannel) => {\r\n\t\t\t\t\tthis.props.logger.success(`Deleted selected channel`);\r\n\t\t\t\t\tthis.onChannelDeletion.trigger();\r\n\t\t\t\t\tthis.props.reporter.reportGuildAction(`Deleted ${this.props.reporter.formatChannel(c)}`, c.guild);\r\n\t\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onParentSelected(value: string): void {\r\n\t\tif (!this.isCurrentChannelValid()) return;\r\n\r\n\t\tif (!this.channel.manageable) {\r\n\t\t\tthis.props.logger.error('You do not have the \\'MANAGE_CHANNEL\\' permission in the selected guild');\r\n\t\t} else {\r\n\t\t\tif (value === 'NONE') {\r\n\t\t\t\tlet oldParent = this.channel.parent;\r\n\t\t\t\tthis.props.loader.load(this.channel.setParent(null))\r\n\t\t\t\t\t.then((c: Discord.TextChannel) => {\r\n\t\t\t\t\t\tthis.props.logger.success(`Changed selected channel's category`);\r\n\t\t\t\t\t\tlet report: string = `Moved ${this.props.reporter.formatChannel(c)} out of ${this.props.reporter.formatChannel(oldParent)}`;\r\n\t\t\t\t\t\tthis.props.reporter.reportGuildAction(report, c.guild);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(_ => SelectHelper.trySetValue('channel-parent', this.channel.parent ? this.channel.parentID : 'NONE'));\r\n\t\t\t} else {\r\n\t\t\t\tlet parent: Discord.GuildChannel = this.channel.guild.channels.find((c: Discord.GuildChannel) => c.id === value);\r\n\t\t\t\tif (!parent) return;\r\n\r\n\t\t\t\tthis.props.loader.load(this.channel.setParent(parent))\r\n\t\t\t\t\t.then((c: Discord.TextChannel) => {\r\n\t\t\t\t\t\tthis.props.logger.success(`Changed selected channel's category`);\r\n\t\t\t\t\t\tthis.props.reporter.reportGuildAction(`Moved ${this.props.reporter.formatChannel(c)} to ${this.props.reporter.formatChannel(parent)}`, c.guild);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(_ => SelectHelper.trySetValue('channel-parent', this.channel.parent ? this.channel.parentID : 'NONE'));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate isCurrentChannelValid(): boolean {\r\n\t\tif (!this.channel) return false;\r\n\t\tif (this.channel.deleted) return false;\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tprivate initialize(): void {\r\n\t\tlet nameInput: HTMLInputElement = document.getElementById('channel-name') as HTMLInputElement;\r\n\t\tlet topicInput: HTMLInputElement = document.getElementById('channel-topic') as HTMLInputElement;\r\n\t\tlet rtInput: HTMLInputElement = document.getElementById('channel-rate-limit') as HTMLInputElement;\r\n\t\tlet nsfwInput: HTMLInputElement = document.getElementById('channel-nsfw') as HTMLInputElement;\r\n\t\tlet chanContainer: HTMLElement = document.getElementById('container-channel-parent');\r\n\t\tif (!nameInput || !topicInput || !rtInput || !nsfwInput || !chanContainer) return;\r\n\r\n\t\tnameInput.value = this.channel.name;\r\n\t\ttopicInput.value = this.channel.topic ? this.channel.topic : '';\r\n\t\trtInput.value = this.channel.rateLimitPerUser > 0 ? `${this.channel.rateLimitPerUser}s` : '';\r\n\t\tnsfwInput.checked = this.channel.nsfw;\r\n\r\n\t\tlet chans: Discord.Collection<string, Discord.GuildChannel> = this.channel.guild.channels.filter((c: Discord.GuildChannel) => c.type === 'category');\r\n\t\tlet categories: Array<JSX.Element> = [];\r\n\t\tcategories.push(<option key={`${this.channel.id}_NONE`} value='NONE'>no category</option>);\r\n\t\tif (chans.size > 0) {\r\n\t\t\tfor (let item of chans) {\r\n\t\t\t\tlet c: Discord.GuildChannel = item[1];\r\n\t\t\t\tif (c.deleted) continue;\r\n\t\t\t\tcategories.push(<option key={`${this.channel.id}_${c.id}`} value={c.id}>{c.name} [ {c.id} ]</option>);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tReactDOM.render(<Select id='channel-parent' onSelected={this.onParentSelected.bind(this)} defaultValue={this.channel.parent ? this.channel.parentID : 'NONE'}>\r\n\t\t\t{categories}\r\n\t\t</Select>, chanContainer);\r\n\t}\r\n\r\n\tcomponentDidMount(): void {\r\n\t\tthis.channel = this.props.channel;\r\n\t\tthis.initialize();\r\n\t}\r\n\r\n\tcomponentDidUpdate(): void {\r\n\t\tthis.channel = this.props.channel;\r\n\t\tthis.initialize();\r\n\t}\r\n\r\n\trender(): JSX.Element {\r\n\t\treturn <div id='text-channel'>\r\n\t\t\t<div className='row' style={{ padding: '5px' }}>\r\n\t\t\t\t<div className='col-md-12'>\r\n\t\t\t\t\t<div id='container-channel-parent' />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='row' style={{ padding: '5px' }}>\r\n\t\t\t\t<div className='col-md-3'>\r\n\t\t\t\t\t<Input id='channel-name' onValidated={this.onChannelNameChanged.bind(this)} placeholder='name...' />\r\n\t\t\t\t\t<Input id='channel-topic' onValidated={this.onChannelTopicChanged.bind(this)} placeholder='topic...' />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='col-md-3'>\r\n\t\t\t\t\t<Input id='channel-rate-limit' onValidated={this.onChannelRateLimitChanged.bind(this)} placeholder=' slowmode (in seconds)...' />\r\n\t\t\t\t\t<Checkbox id='channel-nsfw' name='NSFW' defaultValue={this.channel.nsfw} onChange={this.onChannelNsfwChanged.bind(this)} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='col-md-3'>\r\n\t\t\t\t\t<button style={{ marginBottom: '5px' }} className='purple-btn small-btn'>Permissions</button>\r\n\t\t\t\t\t<button className='purple-btn small-btn'>Webhooks</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='col-md-3'>\r\n\t\t\t\t\t<button className='red-btn large-btn' onClick={this.onChannelDeleted.bind(this)}>Delete</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='row' style={{ padding: '5px', paddingBottom: '10px' }}>\r\n\t\t\t\t<div className='col-md-12'>\r\n\t\t\t\t\t<Input id='channel-message' onValidated={this.onChannelMessageSent.bind(this)} placeholder='message...' />\r\n\t\t\t\t\t<input id='channel-file' type='file' />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>;\r\n\t}\r\n}","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport * as Discord from 'discord.js';\r\n\r\nimport { ConduitChannelProps } from '../../../utils/conduitProps';\r\nimport { Input } from '../../controls/input';\r\nimport { ConduitEvent } from '../../../utils/conduitEvent';\r\nimport { Select } from '../../controls/select';\r\nimport { SelectHelper } from '../../../utils/selectHelper';\r\nimport { VoiceClient } from '../../../voice/voiceClient';\r\n\r\nexport class DashboardVoiceChannel extends React.Component<ConduitChannelProps<Discord.VoiceChannel>, {}> {\r\n\tprivate static registeredEvents: boolean = false;\r\n\r\n\tprivate onChannelDeletion: ConduitEvent<void>;\r\n\tprivate channel: Discord.VoiceChannel;\r\n\tprivate voiceClient: VoiceClient;\r\n\r\n\tconstructor(props: ConduitChannelProps<Discord.VoiceChannel>) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.onChannelDeletion = new ConduitEvent();\r\n\t\tthis.channel = props.channel;\r\n\t\tthis.voiceClient = null;\r\n\t\tif (props.onLayoutInvalidated) {\r\n\t\t\tthis.onChannelDeletion.on(props.onLayoutInvalidated);\r\n\t\t}\r\n\r\n\t\tif (!DashboardVoiceChannel.registeredEvents) {\r\n\t\t\tprops.client\r\n\t\t\t\t.on('channelCreate', this.onChannelCreate.bind(this))\r\n\t\t\t\t.on('channelDelete', this.onChannelDelete.bind(this))\r\n\t\t\t\t.on('channelUpdate', (_, c: Discord.Channel) => this.onChannelUpdate(c));\r\n\t\t\t//.on('voiceStateUpdate', console.log);\r\n\r\n\t\t\tDashboardVoiceChannel.registeredEvents = true;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onChannelCreate(c: Discord.Channel): void {\r\n\t\tif (this.isValidChannel(c) && c.type === 'category') {\r\n\t\t\tlet cat: Discord.CategoryChannel = c as Discord.CategoryChannel;\r\n\t\t\tSelectHelper.tryAddValue('channel-parent', cat.id, `${cat.name} [ ${cat.id} ]`, this.onParentSelected.bind(this));\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onChannelDelete(c: Discord.Channel): void {\r\n\t\tif (this.isValidChannel(c)) {\r\n\t\t\tif (c.id === this.channel.id) {\r\n\t\t\t\tthis.onChannelDeletion.trigger();\r\n\t\t\t} else if (c.type === 'category') {\r\n\t\t\t\tSelectHelper.tryRemoveValue('channel-parent', c.id);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onChannelUpdate(c: Discord.Channel): void {\r\n\t\tif (this.isValidChannel(c)) {\r\n\t\t\tif (c.id === this.channel.id) {\r\n\t\t\t\tthis.channel = c as Discord.VoiceChannel;\r\n\t\t\t\tthis.initialize();\r\n\t\t\t} else if (c.type === 'category') {\r\n\t\t\t\tlet cat: Discord.CategoryChannel = c as Discord.CategoryChannel;\r\n\t\t\t\tSelectHelper.tryChangeOptionText('channel-parent', cat.id, `${cat.name} [ ${cat.id} ]`);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate isValidChannel(c: Discord.Channel): boolean {\r\n\t\tif (!this.isVisible()) return false;\r\n\t\tif (c.type === 'dm' || c.type === 'group') return false;\r\n\t\tlet guildChan: Discord.GuildChannel = c as Discord.GuildChannel;\r\n\t\treturn guildChan.guild.id === this.channel.guild.id;\r\n\t}\r\n\r\n\tprivate isVisible(): boolean {\r\n\t\tif (document.getElementById('voice-channel')) return true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate onChannelNameChanged(): void {\r\n\t\tif (!this.isCurrentChannelValid()) return;\r\n\r\n\t\tlet input: HTMLInputElement = document.getElementById('channel-name') as HTMLInputElement;\r\n\t\tif (input.value) {\r\n\t\t\tif (!this.channel.manageable) {\r\n\t\t\t\tthis.props.logger.error('You do not have the \\'MANAGE_CHANNEL\\' permission in the selected guild');\r\n\t\t\t\tinput.value = this.channel.name;\r\n\t\t\t} else {\r\n\t\t\t\tlet oldName: string = this.channel.name;\r\n\t\t\t\tthis.props.loader.load(this.channel.setName(input.value))\r\n\t\t\t\t\t.then((c: Discord.VoiceChannel) => {\r\n\t\t\t\t\t\tthis.props.logger.success('Changed selected channel\\'s name');\r\n\t\t\t\t\t\tthis.props.reporter.reportGuildAction(`Changed ${this.props.reporter.formatChannel(c)}'s name [ \\`${oldName}\\` -> \\`${c.name}\\` ]`, c.guild);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(_ => input.value = this.channel.name);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tinput.value = this.channel.name;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onChannelUserLimitChanged(): void {\r\n\t\tif (!this.isCurrentChannelValid()) return;\r\n\r\n\t\tlet input: HTMLInputElement = document.getElementById('channel-user-limit') as HTMLInputElement;\r\n\t\tif (input.value) {\r\n\t\t\tif (!this.channel.manageable) {\r\n\t\t\t\tthis.props.logger.error('You do not have the \\'MANAGE_CHANNEL\\' permission in the selected guild');\r\n\t\t\t\tinput.value = this.channel.userLimit > 0 ? `${this.channel.userLimit} max. users` : '';\r\n\t\t\t} else {\r\n\t\t\t\tlet regex: RegExp = /^(\\d+)(\\s*max\\.?\\s*users)?$/;\r\n\t\t\t\tlet matches: RegExpMatchArray = input.value.match(regex);\r\n\t\t\t\tif (matches && matches[1]) {\r\n\t\t\t\t\tlet limit: number = Number(matches[1]);\r\n\t\t\t\t\tlet oldLimit: number = this.channel.userLimit;\r\n\t\t\t\t\tthis.props.loader.load(this.channel.setUserLimit(limit))\r\n\t\t\t\t\t\t.then((c: Discord.VoiceChannel) => {\r\n\t\t\t\t\t\t\tinput.value = c.userLimit > 0 ? `${c.userLimit} max. users` : '';\r\n\t\t\t\t\t\t\tthis.props.logger.success('Changed selected channel\\'s user limit');\r\n\t\t\t\t\t\t\tlet oldLimitDisplay: string = oldLimit === 0 ? 'inf' : `${oldLimit} max. users`;\r\n\t\t\t\t\t\t\tlet newLimitDisplay: string = c.userLimit === 0 ? 'inf' : `${c.userLimit} max. users`;\r\n\t\t\t\t\t\t\tthis.props.reporter.reportGuildAction(`Changed ${this.props.reporter.formatChannel(c)}'s user limit [ \\`${oldLimitDisplay}\\` -> \\`${newLimitDisplay}\\` ]`, c.guild);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch(_ => input.value = this.channel.userLimit > 0 ? `${this.channel.userLimit} max. users` : '');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tinput.value = this.channel.userLimit > 0 ? `${this.channel.userLimit} max. users` : '';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onChannelBitrateChanged(): void {\r\n\t\tif (!this.isCurrentChannelValid()) return;\r\n\r\n\t\tlet input: HTMLInputElement = document.getElementById('channel-bitrate') as HTMLInputElement;\r\n\t\tif (input.value) {\r\n\t\t\tif (!this.channel.manageable) {\r\n\t\t\t\tthis.props.logger.error('You do not have the \\'MANAGE_CHANNEL\\' permission in the selected guild');\r\n\t\t\t\tinput.value = `${this.channel.bitrate}kbps`;\r\n\t\t\t} else {\r\n\t\t\t\tlet regex: RegExp = /^(\\d+)(\\s*kbps)?$/;\r\n\t\t\t\tlet matches: RegExpMatchArray = input.value.match(regex);\r\n\t\t\t\tif (matches && matches[1]) {\r\n\t\t\t\t\tlet bitrate: number = Number(matches[1]);\r\n\t\t\t\t\tlet oldBitrate: number = this.channel.bitrate;\r\n\t\t\t\t\tthis.props.loader.load(this.channel.setBitrate(bitrate))\r\n\t\t\t\t\t\t.then((c: Discord.VoiceChannel) => {\r\n\t\t\t\t\t\t\tinput.value = `${c.bitrate}kbps`;\r\n\t\t\t\t\t\t\tthis.props.reporter.reportGuildAction(`Changed ${this.props.reporter.formatChannel(c)}'s bitrate [ \\`${oldBitrate}\\` -> \\`${c.bitrate}\\` ]`, c.guild);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch(_ => input.value = `${this.channel.bitrate}kbps`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tinput.value = `${this.channel.bitrate}kbps`;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onChannelDeleted(): void {\r\n\t\tif (!this.isCurrentChannelValid()) return;\r\n\r\n\t\tif (!this.channel.deletable) {\r\n\t\t\tthis.props.logger.error('You do not have the \\'MANAGE_CHANNEL\\' permission in the selected guild');\r\n\t\t} else {\r\n\t\t\tthis.props.loader.load(this.channel.delete())\r\n\t\t\t\t.then((c: Discord.VoiceChannel) => {\r\n\t\t\t\t\tthis.props.logger.success(`Deleted selected channel`);\r\n\t\t\t\t\tthis.onChannelDeletion.trigger();\r\n\t\t\t\t\tthis.props.reporter.reportGuildAction(`Deleted ${this.props.reporter.formatChannel(c)}`, c.guild);\r\n\t\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/*private connect(): void {\r\n\t\tthis.voiceClient = new VoiceClient(this.channel);\r\n\t\tthis.props.loader.load(this.voiceClient.connect())\r\n\t\t\t.then((success: boolean) => {\r\n\t\t\t\tlet msg: string = success\r\n\t\t\t\t\t? 'Connected to selected voice channel'\r\n\t\t\t\t\t: 'Could not connect to selected voice channel';\r\n\t\t\t\tthis.props.logger.success(msg);\r\n\t\t\t});\r\n\t}\r\n\r\n\tprivate onJoinLeaveClick(): void {\r\n\t\tif (this.voiceClient && this.voiceClient.isConnected) {\r\n\t\t\tthis.voiceClient.disconnect();\r\n\t\t\tthis.props.logger.success('Should disconnect');\r\n\t\t\tif (this.voiceClient.channel.id != this.channel.id) {\r\n\t\t\t\tthis.connect();\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.connect();\r\n\t\t}\r\n\t}*/\r\n\r\n\tprivate onParentSelected(value: string): void {\r\n\t\tif (!this.isCurrentChannelValid()) return;\r\n\r\n\t\tif (!this.channel.manageable) {\r\n\t\t\tthis.props.logger.error('You do not have the \\'MANAGE_CHANNEL\\' permission in the selected guild');\r\n\t\t} else {\r\n\t\t\tif (value === 'NONE') {\r\n\t\t\t\tlet oldParent = this.channel.parent;\r\n\t\t\t\tthis.props.loader.load(this.channel.setParent(null))\r\n\t\t\t\t\t.then((c: Discord.VoiceChannel) => {\r\n\t\t\t\t\t\tthis.props.logger.success(`Changed selected channel's category`);\r\n\t\t\t\t\t\tlet report: string = `Moved ${this.props.reporter.formatChannel(c)} out of ${this.props.reporter.formatChannel(oldParent)}`;\r\n\t\t\t\t\t\tthis.props.reporter.reportGuildAction(report, c.guild);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(_ => SelectHelper.trySetValue('channel-parent', this.channel.parent ? this.channel.parentID : 'NONE'));\r\n\t\t\t} else {\r\n\t\t\t\tlet parent: Discord.GuildChannel = this.channel.guild.channels.find((c: Discord.GuildChannel) => c.id === value);\r\n\t\t\t\tif (!parent) return;\r\n\r\n\t\t\t\tthis.props.loader.load(this.channel.setParent(parent))\r\n\t\t\t\t\t.then((c: Discord.VoiceChannel) => {\r\n\t\t\t\t\t\tthis.props.logger.success(`Changed selected channel's category`);\r\n\t\t\t\t\t\tthis.props.reporter.reportGuildAction(`Moved ${this.props.reporter.formatChannel(c)} to ${this.props.reporter.formatChannel(parent)}`, c.guild);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(_ => SelectHelper.trySetValue('channel-parent', this.channel.parent ? this.channel.parentID : 'NONE'));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate isCurrentChannelValid(): boolean {\r\n\t\tif (!this.channel) return false;\r\n\t\tif (this.channel.deleted) return false;\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\tprivate initialize(): void {\r\n\t\tlet nameInput: HTMLInputElement = document.getElementById('channel-name') as HTMLInputElement;\r\n\t\tlet userLimitInput: HTMLInputElement = document.getElementById('channel-user-limit') as HTMLInputElement;\r\n\t\tlet bitrateInput: HTMLInputElement = document.getElementById('channel-bitrate') as HTMLInputElement;\r\n\t\tlet chanContainer: HTMLElement = document.getElementById('container-channel-parent');\r\n\t\tif (!nameInput || !userLimitInput || !bitrateInput || !chanContainer) return;\r\n\r\n\t\tnameInput.value = this.channel.name;\r\n\t\tuserLimitInput.value = this.channel.userLimit > 0 ? `${this.channel.userLimit} max. users` : '';\r\n\t\tbitrateInput.value = this.channel.bitrate ? `${this.channel.bitrate}kbps` : ''; // should never happen\r\n\r\n\t\tlet chans: Discord.Collection<string, Discord.GuildChannel> = this.channel.guild.channels.filter((c: Discord.GuildChannel) => c.type === 'category');\r\n\t\tlet categories: Array<JSX.Element> = [];\r\n\t\tcategories.push(<option key={`${this.channel.id}_NONE`} value='NONE'>no category</option>);\r\n\t\tif (chans.size > 0) {\r\n\t\t\tfor (let item of chans) {\r\n\t\t\t\tlet c: Discord.GuildChannel = item[1];\r\n\t\t\t\tif (c.deleted) continue;\r\n\t\t\t\tcategories.push(<option key={`${this.channel.id}_${c.id}`} value={c.id}>{c.name} [ {c.id} ]</option>);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tReactDOM.render(<Select id='channel-parent' onSelected={this.onParentSelected.bind(this)} defaultValue={this.channel.parent ? this.channel.parentID : 'NONE'}>\r\n\t\t\t{categories}\r\n\t\t</Select>, chanContainer);\r\n\t}\r\n\r\n\tcomponentDidMount(): void {\r\n\t\tthis.channel = this.props.channel;\r\n\t\tthis.initialize();\r\n\t}\r\n\r\n\tcomponentDidUpdate(): void {\r\n\t\tthis.channel = this.props.channel;\r\n\t\tthis.initialize();\r\n\t}\r\n\r\n\trender(): JSX.Element {\r\n\t\treturn <div id='voice-channel'>\r\n\t\t\t<div className='row' style={{ padding: '5px' }}>\r\n\t\t\t\t<div className='col-md-12'>\r\n\t\t\t\t\t<div id='container-channel-parent' />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='row' style={{ padding: '5px' }}>\r\n\t\t\t\t<div className='col-md-3'>\r\n\t\t\t\t\t<Input id='channel-name' onValidated={this.onChannelNameChanged.bind(this)} placeholder='name...' />\r\n\t\t\t\t\t<Input id='channel-user-limit' onValidated={this.onChannelUserLimitChanged.bind(this)} placeholder='user limit...' />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='col-md-3'>\r\n\t\t\t\t\t<Input id='channel-bitrate' onValidated={this.onChannelBitrateChanged.bind(this)} placeholder='bitrate...' />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='col-md-3'>\r\n\t\t\t\t\t<button className='purple-btn large-btn'>Permissions</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='col-md-3'>\r\n\t\t\t\t\t<button className='red-btn large-btn' onClick={this.onChannelDeleted.bind(this)}>Delete</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{/*<div className='row' style={{ padding: '5px' }}>\r\n\t\t\t\t<div className='col-md-3'>\r\n\t\t\t\t\t<button style={{ height: '68px', width: '100%' }} className='purple-btn' onClick={this.onJoinLeaveClick.bind(this)}>Join / Leave</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='col-md-3'>\r\n\t\t\t\t\t<Input id='channel-tts' placeholder='tts message...' multiline={true} style={{ height: '68px', width: '100%' }} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='col-md-6'>\r\n\t\t\t\t\t<Input id='channel-url' placeholder='file url...' />\r\n\t\t\t\t\t<input id='channel-file' type='file' />\r\n\t\t\t\t</div>\r\n\t\t\t</div>*/}\r\n\t\t</div>;\r\n\t}\r\n}","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport * as Discord from 'discord.js';\r\n\r\nimport { ConduitGuildSubPanelProps } from '../../../utils/conduitProps';\r\nimport { Input } from '../../controls/input';\r\nimport { ColorPicker } from '../../controls/colorPicker';\r\n\r\nexport class DashboardRoles extends React.Component<ConduitGuildSubPanelProps, {}> {\r\n\tprivate selectedRole: Discord.Role;\r\n\r\n\tprivate async valideColorChange(color: string): Promise<boolean> {\r\n\t\tif (!this.selectedRole) return false;\r\n\r\n\t\ttry {\r\n\t\t\tawait this.props.loader.load(this.selectedRole.setColor(color));\r\n\t\t\treturn true;\r\n\t\t} catch {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onColorChangeFail(): string {\r\n\t\tif (!this.selectedRole) return '000000';\r\n\r\n\t\treturn this.selectedRole.color.toString(16);\r\n\t}\r\n\r\n\tprivate loadRole(roleId: string): void {\r\n\t\tlet roleContainer: HTMLElement = document.getElementById('role');\r\n\t\tlet role: Discord.Role = this.props.guild.roles.find((r: Discord.Role) => r.id === roleId && !r.deleted);\r\n\t\tif (role) {\r\n\t\t\tthis.selectedRole = role;\r\n\t\t\t//role.setHoist\r\n\t\t\tReactDOM.render(<div className='row'>\r\n\t\t\t\t<div className='col-md-1'>\r\n\t\t\t\t\t<ColorPicker id='role-color' color={role.color.toString(16)} validateChange={this.valideColorChange.bind(this)}\r\n\t\t\t\t\t\tfailedChange={this.onColorChangeFail} style={{ width: '100%', height: '32px' }} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='col-md-2'>\r\n\t\t\t\t\t<Input id='role-name' value={role.name} placeholder='name...' />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='col-md-3' />\r\n\t\t\t\t<div className='col-md-3'>\r\n\t\t\t\t\t<button className='purple-btn small-btn'>Permissions</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='col-md-3'>\r\n\t\t\t\t\t<button className='red-btn small-btn'>Delete</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>, roleContainer);\r\n\t\t} else {\r\n\t\t\tReactDOM.render(<div />, roleContainer);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onRoleSelected(): void {\r\n\t\tlet input: HTMLInputElement = document.getElementById('guild-role') as HTMLInputElement;\r\n\t\tif (input.value) {\r\n\t\t\tthis.loadRole(input.value);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate renderRoles(): JSX.Element {\r\n\t\tlet roles: Discord.Collection<string, Discord.Role> = this.props.guild.roles.filter((r: Discord.Role) => !r.deleted);\r\n\t\tif (roles.size > 0) {\r\n\t\t\tlet opts: Array<JSX.Element> = roles.map((r: Discord.Role) => <option key={`${this.props.guild.id}_${r.id}`} value={r.id}>{r.name} [ {r.hexColor} | {r.id} ]</option>);\r\n\r\n\t\t\treturn <div>\r\n\t\t\t\t<Input id='guild-role' placeholder='role name or id...' onValidated={this.onRoleSelected.bind(this)} list='guild-roles'/>\r\n\t\t\t\t<datalist id='guild-roles'>{opts}</datalist>\r\n\t\t\t\t<hr style={{ marginBottom: '0px' }} />\r\n\t\t\t</div>;\r\n\t\t} else {\r\n\t\t\treturn <div />;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate postRender(): void {\r\n\t\tlet input: HTMLInputElement = document.getElementById('guild-role') as HTMLInputElement;\r\n\t\tlet roles: Discord.Collection<string, Discord.Role> = this.props.guild.roles.filter((r: Discord.Role) => !r.deleted);\r\n\t\tif (input && roles.size > 0) {\r\n\t\t\tinput.value = roles.first().id;\r\n\t\t\tthis.loadRole(input.value);\r\n\t\t} else {\r\n\t\t\tReactDOM.render(<div />, document.getElementById('role'));\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(): void {\r\n\t\tthis.postRender();\r\n\t}\r\n\r\n\tcomponentDidUpdate(): void {\r\n\t\tthis.postRender();\r\n\t}\r\n\r\n\trender(): JSX.Element {\r\n\t\treturn <div>\r\n\t\t\t<div style={{ padding: '10px', paddingBottom: '0px' }}>\r\n\t\t\t\t<div className='row'>\r\n\t\t\t\t\t<div className='col-md-12'>\r\n\t\t\t\t\t\t{this.renderRoles()}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div id='role' style={{ padding: '10px', paddingBottom: '5px' }} />\r\n\t\t</div>;\r\n\t}\r\n}","import * as React from 'react'\r\n\r\nexport interface ColorPickerProps {\r\n\tid: string;\r\n\tcolor: string;\r\n\tvalidateChange: (color: string) => Promise<boolean>;\r\n\tfailedChange: () => string;\r\n\tstyle?: React.CSSProperties;\r\n}\r\n\r\nexport class ColorPicker extends React.Component<ColorPickerProps, {}> {\r\n\tprivate setColor(color: string): void {\r\n\t\tcolor = color === '0' ? '99AAB5' : color; // default discord role color\r\n\t\tlet picker: HTMLElement = document.getElementById(this.props.id);\r\n\t\tlet input: HTMLInputElement = picker.getElementsByTagName('input')[0];\r\n\t\tlet display: HTMLDivElement = picker.getElementsByTagName('div')[0];\r\n\r\n\t\tinput.value = color;\r\n\t\tdisplay.style.backgroundColor = `#${color}`;\r\n\t}\r\n\r\n\tprivate onClick(_: React.MouseEvent<HTMLDivElement, MouseEvent>): void {\r\n\t\tlet picker: HTMLElement = document.getElementById(this.props.id);\r\n\t\tlet input: HTMLInputElement = picker.getElementsByTagName('input')[0];\r\n\t\tinput.click();\r\n\t}\r\n\r\n\tprivate async onChange(_: React.ChangeEvent<HTMLInputElement>): Promise<void> {\r\n\t\tlet picker: HTMLElement = document.getElementById(this.props.id);\r\n\t\tlet input: HTMLInputElement = picker.getElementsByTagName('input')[0];\r\n\t\tlet change: boolean = await this.props.validateChange(input.value);\r\n\t\tif (change) {\r\n\t\t\tthis.setColor(input.value);\r\n\t\t} else {\r\n\t\t\tlet color: string = this.props.failedChange()\r\n\t\t\tthis.setColor(color);\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(): void {\r\n\t\tthis.setColor(this.props.color);\r\n\t}\r\n\r\n\tcomponentDidUpdate(): void {\r\n\t\tthis.setColor(this.props.color);\r\n\t}\r\n\r\n\trender(): JSX.Element {\r\n\t\treturn <div id={this.props.id} style={this.props.style}>\r\n\t\t\t<input type='color' onChange={this.onChange.bind(this)} style={{ display: 'none' }} />\r\n\t\t\t<div onClick={this.onClick.bind(this)} style={{\r\n\t\t\t\tbackgroundColor: this.props.color,\r\n\t\t\t\theight: '100%',\r\n\t\t\t\twidth: '100%',\r\n\t\t\t\tborder: '1px solid black',\r\n\t\t\t\tdisplay: 'inline-block',\r\n\t\t\t}} />\r\n\t\t</div>;\r\n\t}\r\n}","import * as Discord from 'discord.js';\r\n\r\nimport { HttpClient, HttpResult } from './httpClient';\r\n\r\nclass Cache<T> {\r\n\tprivate objects: Discord.Collection<string, T>;\r\n\tprivate timeout: number;\r\n\r\n\tconstructor (timeout: number) {\r\n\t\tthis.objects = new Discord.Collection();\r\n\t\tthis.timeout = timeout;\r\n\t}\r\n\r\n\tpublic cache(id: string, object: T): void {\r\n\t\tthis.objects.set(id, object);\r\n\t\tsetTimeout(() => this.objects.delete(id), this.timeout);\r\n\t}\r\n\r\n\tpublic isCached(id: string): boolean {\r\n\t\treturn this.objects.has(id);\r\n\t}\r\n\r\n\tpublic get(id: string): T {\r\n\t\treturn this.objects.get(id);\r\n\t}\r\n}\r\n\r\nclass RestCache {\r\n\tpublic guilds: Cache<Discord.Guild>;\r\n\tpublic guildChannels: Cache<Discord.GuildChannel>;\r\n\r\n\tconstructor (timeout: number) {\r\n\t\tthis.guilds = new Cache<Discord.Guild>(timeout);\r\n\t\tthis.guildChannels = new Cache<Discord.GuildChannel>(timeout);\r\n\t}\r\n}\r\n\r\nexport class RestClient {\r\n\tprivate httpClient: HttpClient;\r\n\tprivate client: Discord.Client;\r\n\tprivate cache: RestCache;\r\n\r\n\tconstructor(client: Discord.Client) {\r\n\t\tthis.client = client;\r\n\t\tthis.httpClient = new HttpClient();\r\n\t\tthis.cache = new RestCache(3000);\r\n\t}\r\n\r\n\tprivate defaultFetchAPI(path: string): Promise<HttpResult> {\r\n\t\treturn this.httpClient.get(`https://discordapp.com/api/${path}`, {\r\n\t\t\t'Authorization': `Bot ${this.client.token}`,\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t});\r\n\t}\r\n\r\n\tprivate createGuildChannel(guild: Discord.Guild, data: any): Discord.GuildChannel {\r\n\t\tswitch (data.type) {\r\n\t\t\tcase 0: // text\r\n\t\t\tcase 5: // news\r\n\t\t\tcase 6: // store\r\n\t\t\t\treturn new Discord.TextChannel(guild, data);\r\n\t\t\tcase 2: // voice\r\n\t\t\t\treturn new Discord.VoiceChannel(guild, data);\r\n\t\t\tcase 4: // category\r\n\t\t\t\treturn new Discord.CategoryChannel(guild, data);\r\n\t\t\tdefault:\r\n\t\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate async fetchGuildChannels(guild: Discord.Guild): Promise<void> {\r\n\t\tlet res: HttpResult = await this.defaultFetchAPI(`guilds/${guild.id}/channels`);\r\n\t\tif (res.isSuccess()) {\r\n\t\t\tlet dataArray: Array<object> = res.asObject<Array<object>>();\r\n\t\t\tfor (let data of dataArray) {\r\n\t\t\t\tlet chan: Discord.GuildChannel = this.createGuildChannel(guild, data)\r\n\t\t\t\tif (!chan) continue;\r\n\r\n\t\t\t\tguild.channels.set(chan.id, chan);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic async fetchGuild(guildId: string): Promise<Discord.Guild> {\r\n\t\tif (this.cache.guilds.isCached(guildId)) {\r\n\t\t\treturn this.cache.guilds.get(guildId);\r\n\t\t}\r\n\r\n\t\tlet res: HttpResult = await this.defaultFetchAPI(`guilds/${guildId}`);\r\n\t\tif (res.isSuccess()) {\r\n\t\t\tlet data: object = res.asObject<object>();\r\n\t\t\tlet guild: Discord.Guild = new Discord.Guild(this.client, data);\r\n\r\n\t\t\tawait this.fetchGuildChannels(guild);\r\n\t\t\tlet me: Discord.GuildMember = await guild.fetchMember(this.client.user, true);\r\n\t\t\tguild.members.set(me.id, me);\r\n\t\t\tguild.available = true;\r\n\r\n\t\t\tthis.cache.guilds.cache(guild.id, guild);\r\n\t\t\treturn guild;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic async fetchGuildChannel(guild: Discord.Guild, chanId: string): Promise<Discord.GuildChannel> {\r\n\t\tif (this.cache.guildChannels.isCached(chanId)) {\r\n\t\t\treturn this.cache.guildChannels.get(chanId);\r\n\t\t}\r\n\r\n\t\tlet res: HttpResult = await this.defaultFetchAPI(`channels/${chanId}`);\r\n\t\tif (res.isSuccess()) {\r\n\t\t\tlet data: object = res.asObject<any>();\r\n\t\t\tlet chan: Discord.GuildChannel = this.createGuildChannel(guild, data);\r\n\t\t\tif (!chan) return null;\r\n\r\n\t\t\tif (chan.type != 'category') {\r\n\t\t\t\tlet parent: Discord.GuildChannel = await this.fetchGuildChannel(guild, chan.parentID);\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tguild.channels.set(parent.id, parent);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.cache.guildChannels.cache(chan.id, chan);\r\n\t\t\treturn chan;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n}","import * as React from 'react';\r\n\r\nexport class Header extends React.Component<{}, {}> {\r\n\trender(): JSX.Element {\r\n\t\treturn <div className='header' style={{ position: 'absolute' }}>\r\n\t\t\t<img src='./public/img/logo_brand.png' alt='logo' />\r\n\t\t\t<h1 style={{ display: 'none' }}>Conduit</h1>\r\n\t\t</div>\r\n\t}\r\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = $getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  var args = [];\n  for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    ReflectApply(this.listener, this.target, args);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n"],"sourceRoot":""}